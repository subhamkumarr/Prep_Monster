{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Box, Grid, AppBar, Toolbar, Select, MenuItem, FormControl, Link, IconButton, Switch, FormControlLabel, CircularProgress, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport PersonIcon from '@mui/icons-material/Person';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { patterns as initialPatterns } from './data/patterns';\nimport PatternCard from './components/PatternCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    if (savedMode !== null) {\n      return JSON.parse(savedMode);\n    }\n    return true;\n  });\n  const [patterns, setPatterns] = useState(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState('all');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [patternFilter, setPatternFilter] = useState('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [languageFilter, setLanguageFilter] = useState('all');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    medium: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    hard: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    }\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0,\n      easyTotal = 0;\n    let mediumCompleted = 0,\n      mediumTotal = 0;\n    let hardCompleted = 0,\n      hardTotal = 0;\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n    setOverallProgress(totalQuestions === 0 ? 0 : completedQuestions / totalQuestions * 100);\n    setDifficultyProgress({\n      easy: {\n        completed: easyCompleted,\n        total: easyTotal,\n        percentage: easyTotal === 0 ? 0 : easyCompleted / easyTotal * 100\n      },\n      medium: {\n        completed: mediumCompleted,\n        total: mediumTotal,\n        percentage: mediumTotal === 0 ? 0 : mediumCompleted / mediumTotal * 100\n      },\n      hard: {\n        completed: hardCompleted,\n        total: hardTotal,\n        percentage: hardTotal === 0 ? 0 : hardCompleted / hardTotal * 100\n      }\n    });\n  }, [patterns, darkMode]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleDifficultyChange = event => {\n    setDifficultyFilter(event.target.value);\n  };\n  const handleStatusChange = event => {\n    setStatusFilter(event.target.value);\n  };\n  const handlePatternSearchChange = event => {\n    setPatternSearchTerm(event.target.value);\n  };\n  const handlePatternChange = event => {\n    setPatternFilter(event.target.value);\n  };\n  const handleLanguageChange = event => {\n    setLanguageFilter(event.target.value);\n  };\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n  const toggleStarPattern = patternName => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n  const handleQuestionStatusChange = React.useCallback((patternName, questionName, newStatus) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                status: newStatus\n              };\n            }\n            return question;\n          });\n\n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return {\n            ...pattern,\n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const toggleStarQuestion = (patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  };\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return {\n      ...pattern,\n      questions: questionsMatchFilters\n    };\n  });\n  const memoizedToggleStarQuestion = React.useCallback((patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setLanguageFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started',\n        starred: false\n      })),\n      progress: {\n        completed: 0,\n        total: pattern.questions.length\n      }\n    }));\n    setPatterns(resetPatterns);\n    handleCloseResetDialog();\n  };\n  const handleResetFiltersAndProgress = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setLanguageFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started',\n        starred: false\n      })),\n      progress: {\n        completed: 0,\n        total: pattern.questions.length\n      }\n    }));\n    setPatterns(resetPatterns);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const filteredPatternOptions = initialPatterns.filter(pattern => pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5',\n      minHeight: '100vh',\n      color: darkMode ? '#e0e0e0' : '#333333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      sx: {\n        bgcolor: darkMode ? '#262626' : '#ffffff',\n        boxShadow: 3,\n        zIndex: 1100\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 0,\n            fontWeight: 'bold',\n            color: darkMode ? '#ffffff' : '#333333',\n            letterSpacing: '0.1em',\n            mr: 4\n          },\n          children: [\"Algo\", /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: {\n              color: '#00aaff'\n            },\n            children: \"Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: {\n              xs: 'none',\n              md: 'flex'\n            },\n            alignItems: 'center',\n            mr: 3,\n            gap: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            color: \"inherit\",\n            underline: \"none\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              fontWeight: 'medium',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: \"Learn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            color: \"inherit\",\n            underline: \"none\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              fontWeight: 'medium',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: \"Practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            color: \"inherit\",\n            underline: \"none\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              fontWeight: 'medium',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: \"Newsletter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: darkMode,\n            onChange: toggleDarkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 22\n          }, this),\n          label: darkMode ? \"Dark Mode\" : \"Light Mode\",\n          sx: {\n            color: darkMode ? '#ffffff' : '#333333',\n            mr: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            href: \"#\",\n            target: \"_blank\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(YouTubeIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 171\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            href: \"#\",\n            target: \"_blank\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(GitHubIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 171\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 146\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            sx: {\n              display: {\n                xs: 'block',\n                md: 'none'\n              },\n              color: darkMode ? '#bdbdbd' : '#666666',\n              '&:hover': {\n                color: darkMode ? '#ffffff' : '#333333'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 184\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      sx: {\n        mt: 4,\n        mb: 4,\n        px: {\n          xs: 2,\n          sm: 3,\n          md: 4\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          width: '100%',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            mb: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              bgcolor: darkMode ? '#212121' : '#ffffff',\n              p: 4,\n              borderRadius: 2,\n              boxShadow: 3,\n              display: 'flex',\n              flexDirection: {\n                xs: 'column',\n                md: 'row'\n              },\n              alignItems: 'center',\n              gap: {\n                xs: 4,\n                md: 8\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1,\n                width: {\n                  xs: '100%',\n                  md: 'auto'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                sx: {\n                  mb: 2,\n                  fontWeight: 'bold',\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mb: 0.5,\n                      fontWeight: 'medium',\n                      color: darkMode ? '#ffffff' : '#333333'\n                    },\n                    children: \"Search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    size: \"small\",\n                    placeholder: \"Search problems...\",\n                    value: searchTerm,\n                    onChange: handleSearchChange,\n                    fullWidth: true,\n                    InputProps: {\n                      startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                        sx: {\n                          color: darkMode ? '#ffffff' : '#333333',\n                          mr: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 56\n                      }, this)\n                    },\n                    sx: {\n                      bgcolor: darkMode ? '#121212' : '#ffffff',\n                      '.MuiOutlinedInput-notchedOutline': {\n                        borderColor: darkMode ? '#424242' : '#e0e0e0'\n                      },\n                      input: {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      label: {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\n                        borderColor: darkMode ? '#616161' : '#e0e0e0'\n                      },\n                      '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                        borderColor: darkMode ? '#00aaff' : '#333333'\n                      }\n                    },\n                    InputLabelProps: {\n                      style: {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mb: 0.5,\n                      fontWeight: 'medium',\n                      color: darkMode ? '#ffffff' : '#333333'\n                    },\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    size: \"small\",\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      value: statusFilter,\n                      onChange: handleStatusChange,\n                      displayEmpty: true,\n                      sx: {\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        '.MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#424242' : '#e0e0e0'\n                        },\n                        '.MuiSelect-select': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '.MuiSvgIcon-root': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#616161' : '#e0e0e0'\n                        },\n                        '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#00aaff' : '#333333'\n                        }\n                      },\n                      MenuProps: {\n                        PaperProps: {\n                          sx: {\n                            bgcolor: darkMode ? '#121212' : '#ffffff',\n                            color: darkMode ? '#ffffff' : '#333333',\n                            '& .MuiMenuItem-root': {\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '&:hover': {\n                                bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                              },\n                              '&.Mui-selected': {\n                                bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                              }\n                            }\n                          }\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"all\",\n                        children: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Completed\",\n                        children: \"Completed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mb: 0.5,\n                      fontWeight: 'medium',\n                      color: darkMode ? '#ffffff' : '#333333'\n                    },\n                    children: \"Difficulty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    size: \"small\",\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      value: difficultyFilter,\n                      onChange: handleDifficultyChange,\n                      displayEmpty: true,\n                      sx: {\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        '.MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#424242' : '#e0e0e0'\n                        },\n                        '.MuiSelect-select': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '.MuiSvgIcon-root': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#616161' : '#e0e0e0'\n                        },\n                        '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#00aaff' : '#333333'\n                        }\n                      },\n                      MenuProps: {\n                        PaperProps: {\n                          sx: {\n                            bgcolor: darkMode ? '#121212' : '#ffffff',\n                            color: darkMode ? '#ffffff' : '#333333',\n                            '& .MuiMenuItem-root': {\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '&:hover': {\n                                bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                              },\n                              '&.Mui-selected': {\n                                bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                              }\n                            }\n                          }\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"all\",\n                        children: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 30\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Easy\",\n                        children: \"Easy\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 30\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Medium\",\n                        children: \"Medium\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 30\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Hard\",\n                        children: \"Hard\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 30\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      mb: 0.5,\n                      fontWeight: 'medium',\n                      color: darkMode ? '#ffffff' : '#333333'\n                    },\n                    children: \"Pattern\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    size: \"small\",\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      value: patternFilter,\n                      onChange: handlePatternChange,\n                      displayEmpty: true,\n                      sx: {\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        '.MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#424242' : '#e0e0e0'\n                        },\n                        '.MuiSelect-select': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '.MuiSvgIcon-root': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#616161' : '#e0e0e0'\n                        },\n                        '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#00aaff' : '#333333'\n                        }\n                      },\n                      MenuProps: {\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            bgcolor: darkMode ? '#121212' : '#ffffff',\n                            color: darkMode ? '#ffffff' : '#333333',\n                            '& .MuiMenuItem-root': {\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '&:hover': {\n                                bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                              },\n                              '&.Mui-selected': {\n                                bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                              }\n                            }\n                          }\n                        },\n                        anchorOrigin: {\n                          vertical: 'bottom',\n                          horizontal: 'left'\n                        },\n                        transformOrigin: {\n                          vertical: 'top',\n                          horizontal: 'left'\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"all\",\n                        children: \"All Patterns\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 28\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          p: 1,\n                          position: 'sticky',\n                          top: 0,\n                          bgcolor: darkMode ? '#121212' : '#ffffff',\n                          borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`\n                        },\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          size: \"small\",\n                          placeholder: \"Search patterns...\",\n                          value: patternSearchTerm,\n                          onChange: handlePatternSearchChange,\n                          fullWidth: true,\n                          onClick: e => e.stopPropagation(),\n                          sx: {\n                            bgcolor: darkMode ? '#121212' : '#ffffff',\n                            '.MuiOutlinedInput-notchedOutline': {\n                              borderColor: darkMode ? '#424242' : '#e0e0e0'\n                            },\n                            input: {\n                              color: darkMode ? '#ffffff' : '#333333'\n                            },\n                            '&:hover .MuiOutlinedInput-notchedOutline': {\n                              borderColor: darkMode ? '#616161' : '#e0e0e0'\n                            },\n                            '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                              borderColor: darkMode ? '#00aaff' : '#333333'\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 467,\n                          columnNumber: 30\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 466,\n                        columnNumber: 28\n                      }, this), filteredPatternOptions.map(pattern => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: pattern.name,\n                        children: pattern.name\n                      }, pattern.name, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 31\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: toggleStarredOnly,\n                    sx: {\n                      color: showStarredOnly ? darkMode ? '#ffeb3b' : '#ffc107' : darkMode ? '#bdbdbd' : '#757575',\n                      '&:hover': {\n                        color: showStarredOnly ? darkMode ? '#ffc107' : '#ffeb3b' : darkMode ? '#ffffff' : '#333333'\n                      }\n                    },\n                    children: showStarredOnly ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 46\n                    }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Reset Progress\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleOpenResetDialog,\n                      sx: {\n                        color: darkMode ? '#bdbdbd' : '#757575',\n                        '&:hover': {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 28\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 26\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'relative',\n                display: 'inline-flex',\n                flexShrink: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                variant: \"determinate\",\n                value: overallProgress,\n                size: 180,\n                thickness: 5,\n                sx: {\n                  color: darkMode ? '#66bb6a' : '#4caf50',\n                  transition: 'stroke-dashoffset 0.3s ease 0s',\n                  '& .MuiCircularProgress-circle': {\n                    stroke: darkMode ? '#424242' : '#e0e0e0',\n                    strokeLinecap: 'round'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: 'absolute',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  flexDirection: 'column'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  component: \"div\",\n                  sx: {\n                    color: darkMode ? '#ffffff' : '#333333',\n                    fontWeight: 'bold',\n                    lineHeight: 1\n                  },\n                  children: [patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0), /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"span\",\n                    sx: {\n                      fontSize: '0.7em',\n                      color: darkMode ? '#bdbdbd' : '#666666'\n                    },\n                    children: [\"/\", patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 129\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: darkMode ? '#bdbdbd' : '#666666'\n                  },\n                  children: \"Solved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 1.5,\n              sx: {\n                flexGrow: 1,\n                width: {\n                  xs: '100%',\n                  md: 'auto'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: darkMode ? '#333333' : '#eeeeee',\n                  p: 2,\n                  borderRadius: 1,\n                  textAlign: 'center',\n                  borderLeft: `4px solid #66bb6a`\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: '#66bb6a'\n                  },\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  children: [difficultyProgress.easy.completed, \"/\", difficultyProgress.easy.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: darkMode ? '#333333' : '#eeeeee',\n                  p: 2,\n                  borderRadius: 1,\n                  textAlign: 'center',\n                  borderLeft: `4px solid #ffa726`\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: '#ffa726'\n                  },\n                  children: \"Med.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  children: [difficultyProgress.medium.completed, \"/\", difficultyProgress.medium.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  bgcolor: darkMode ? '#333333' : '#eeeeee',\n                  p: 2,\n                  borderRadius: 1,\n                  textAlign: 'center',\n                  borderLeft: `4px solid #ef5350`\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: '#ef5350'\n                  },\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  children: [difficultyProgress.hard.completed, \"/\", difficultyProgress.hard.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 0\n          },\n          children: filteredPatterns.map(pattern => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3,\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(PatternCard, {\n              pattern: pattern,\n              isStarred: starredPatterns.has(pattern.name),\n              onToggleStar: () => toggleStarPattern(pattern.name),\n              onQuestionStatusChange: handleQuestionStatusChange,\n              onToggleStarQuestion: memoizedToggleStarQuestion,\n              darkMode: darkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)\n          }, pattern.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openResetDialog,\n        onClose: handleCloseResetDialog,\n        \"aria-labelledby\": \"reset-dialog-title\",\n        \"aria-describedby\": \"reset-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"reset-dialog-title\",\n          sx: {\n            bgcolor: darkMode ? '#212121' : '#ffffff',\n            color: darkMode ? '#ffffff' : '#333333'\n          },\n          children: \"Confirm Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          sx: {\n            bgcolor: darkMode ? '#212121' : '#ffffff',\n            color: darkMode ? '#e0e0e0' : '#333333'\n          },\n          children: \"Are you sure you want to reset your progress?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          sx: {\n            bgcolor: darkMode ? '#212121' : '#ffffff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseResetDialog,\n            sx: {\n              color: darkMode ? '#bdbdbd' : '#666666'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleConfirmReset,\n            color: \"error\",\n            variant: \"contained\",\n            autoFocus: true,\n            children: \"Yes, Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r00U8nK3f2HCJKpciGRNHOgR2Fk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Box","Grid","AppBar","Toolbar","Select","MenuItem","FormControl","Link","IconButton","Switch","FormControlLabel","CircularProgress","Tooltip","Dialog","DialogTitle","DialogContent","DialogActions","Button","GitHubIcon","YouTubeIcon","PersonIcon","MenuIcon","SearchIcon","StarBorderIcon","StarIcon","RefreshIcon","patterns","initialPatterns","PatternCard","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","DARK_MODE_STORAGE_KEY","App","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","JSON","parse","setPatterns","savedPatterns","searchTerm","setSearchTerm","difficultyFilter","setDifficultyFilter","statusFilter","setStatusFilter","patternFilter","setPatternFilter","patternSearchTerm","setPatternSearchTerm","languageFilter","setLanguageFilter","showStarredOnly","setShowStarredOnly","starredPatterns","setStarredPatterns","Set","overallProgress","setOverallProgress","difficultyProgress","setDifficultyProgress","easy","completed","total","percentage","medium","hard","openResetDialog","setOpenResetDialog","setItem","stringify","totalQuestions","completedQuestions","easyCompleted","easyTotal","mediumCompleted","mediumTotal","hardCompleted","hardTotal","forEach","pattern","questions","length","filter","q","status","question","difficulty","handleSearchChange","event","target","value","handleDifficultyChange","handleStatusChange","handlePatternSearchChange","handlePatternChange","handleLanguageChange","toggleStarredOnly","prev","toggleStarPattern","patternName","newSet","has","delete","add","handleQuestionStatusChange","useCallback","questionName","newStatus","prevPatterns","map","name","updatedQuestions","progress","toggleStarQuestion","starred","filteredPatterns","matchesPattern","questionsMatchFilters","matchesSearch","toLowerCase","includes","matchesDifficulty","matchesStatus","matchesStarred","memoizedToggleStarQuestion","handleOpenResetDialog","handleCloseResetDialog","handleConfirmReset","resetPatterns","handleResetFiltersAndProgress","toggleDarkMode","filteredPatternOptions","sx","flexGrow","bgcolor","minHeight","color","children","position","boxShadow","zIndex","variant","component","fontWeight","letterSpacing","mr","fileName","_jsxFileName","lineNumber","columnNumber","display","xs","md","alignItems","gap","href","underline","control","checked","onChange","label","fontSize","maxWidth","mt","mb","px","sm","container","spacing","width","item","p","borderRadius","flexDirection","size","placeholder","fullWidth","InputProps","startAdornment","borderColor","input","InputLabelProps","style","displayEmpty","MenuProps","PaperProps","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","top","borderBottom","onClick","e","stopPropagation","title","flexShrink","thickness","transition","stroke","strokeLinecap","left","bottom","right","justifyContent","lineHeight","reduce","sum","textAlign","borderLeft","isStarred","onToggleStar","onQuestionStatusChange","onToggleStarQuestion","open","onClose","id","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Box,\n  Grid,\n  AppBar,\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  SelectChangeEvent,\n  Link,\n  IconButton,\n  LinearProgress,\n  Switch,\n  FormControlLabel,\n  CircularProgress,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button\n} from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport PersonIcon from '@mui/icons-material/Person';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\n\nimport { patterns as initialPatterns, Pattern, Question } from './data/patterns';\nimport PatternCard from './components/PatternCard';\n\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    if (savedMode !== null) {\n      return JSON.parse(savedMode);\n    }\n    return true;\n  });\n  const [patterns, setPatterns] = useState<Pattern[]>(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [patternFilter, setPatternFilter] = useState<string>('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [languageFilter, setLanguageFilter] = useState<string>('all');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState<Set<string>>(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: { completed: 0, total: 0, percentage: 0 },\n    medium: { completed: 0, total: 0, percentage: 0 },\n    hard: { completed: 0, total: 0, percentage: 0 },\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0, easyTotal = 0;\n    let mediumCompleted = 0, mediumTotal = 0;\n    let hardCompleted = 0, hardTotal = 0;\n\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n\n    setOverallProgress(totalQuestions === 0 ? 0 : (completedQuestions / totalQuestions) * 100);\n    setDifficultyProgress({\n      easy: { completed: easyCompleted, total: easyTotal, percentage: easyTotal === 0 ? 0 : (easyCompleted / easyTotal) * 100 },\n      medium: { completed: mediumCompleted, total: mediumTotal, percentage: mediumTotal === 0 ? 0 : (mediumCompleted / mediumTotal) * 100 },\n      hard: { completed: hardCompleted, total: hardTotal, percentage: hardTotal === 0 ? 0 : (hardCompleted / hardTotal) * 100 },\n    });\n  }, [patterns, darkMode]);\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleDifficultyChange = (event: SelectChangeEvent) => {\n    setDifficultyFilter(event.target.value);\n  };\n\n  const handleStatusChange = (event: SelectChangeEvent) => {\n    setStatusFilter(event.target.value);\n  };\n\n  const handlePatternSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPatternSearchTerm(event.target.value);\n  };\n\n  const handlePatternChange = (event: SelectChangeEvent) => {\n    setPatternFilter(event.target.value);\n  };\n\n  const handleLanguageChange = (event: SelectChangeEvent) => {\n    setLanguageFilter(event.target.value);\n  };\n\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n\n  const toggleStarPattern = (patternName: string) => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n\n  const handleQuestionStatusChange = React.useCallback((patternName: string, questionName: string, newStatus: Question['status']) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, status: newStatus };\n            }\n            return question;\n          });\n          \n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return { \n            ...pattern, \n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const toggleStarQuestion = (patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  };\n\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return { ...pattern, questions: questionsMatchFilters };\n  });\n\n  const memoizedToggleStarQuestion = React.useCallback((patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setLanguageFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started' as Question['status'],\n        starred: false,\n      })),\n      progress: { completed: 0, total: pattern.questions.length }\n    }));\n    setPatterns(resetPatterns);\n\n    handleCloseResetDialog();\n  };\n\n  const handleResetFiltersAndProgress = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setLanguageFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started' as Question['status'],\n        starred: false,\n      })),\n      progress: { completed: 0, total: pattern.questions.length }\n    }));\n    setPatterns(resetPatterns);\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const filteredPatternOptions = initialPatterns.filter(pattern => \n    pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase())\n  );\n\n  return (\n    <Box sx={{ \n      flexGrow: 1, \n      bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5', \n      minHeight: '100vh', \n      color: darkMode ? '#e0e0e0' : '#333333' \n    }}>\n      <AppBar position=\"sticky\" sx={{ bgcolor: darkMode ? '#262626' : '#ffffff', boxShadow: 3, zIndex: 1100 }}>\n        <Toolbar>\n          <Typography \n            variant=\"h6\" \n            component=\"div\" \n            sx={{ \n              flexGrow: 0, \n              fontWeight: 'bold', \n              color: darkMode ? '#ffffff' : '#333333', \n              letterSpacing: '0.1em',\n              mr: 4\n            }}>\n            Algo<Box component=\"span\" sx={{ color: '#00aaff' }}>Master</Box>\n          </Typography>\n\n          <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', mr: 3, gap: 3 }}>\n            <Link href=\"#\" color=\"inherit\" underline=\"none\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', fontWeight: 'medium', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}>Learn</Link>\n            <Link href=\"#\" color=\"inherit\" underline=\"none\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', fontWeight: 'medium', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}>Practice</Link>\n            <Link href=\"#\" color=\"inherit\" underline=\"none\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', fontWeight: 'medium', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}>Newsletter</Link>\n          </Box>\n\n          <Box sx={{ flexGrow: 1 }} />\n          \n          <FormControlLabel\n            control={<Switch checked={darkMode} onChange={toggleDarkMode} />}\n            label={darkMode ? \"Dark Mode\" : \"Light Mode\"}\n            sx={{ color: darkMode ? '#ffffff' : '#333333', mr: 2 }}\n          />\n\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>\n            <IconButton color=\"inherit\" href=\"#\" target=\"_blank\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><YouTubeIcon fontSize=\"small\"/></IconButton>\n            <IconButton color=\"inherit\" href=\"#\" target=\"_blank\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><GitHubIcon fontSize=\"small\"/></IconButton>\n            <IconButton color=\"inherit\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><PersonIcon fontSize=\"small\"/></IconButton>\n            <IconButton color=\"inherit\" sx={{ display: { xs: 'block', md: 'none' }, color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><MenuIcon fontSize=\"small\"/></IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth={false} sx={{ mt: 4, mb: 4, px: { xs: 2, sm: 3, md: 4 } }}>\n        <Grid container spacing={3} sx={{ width: '100%', mb: 4 }}>\n          <Grid item xs={12} sx={{ mb: 4 }}>\n            <Box\n              sx={{\n                bgcolor: darkMode ? '#212121' : '#ffffff',\n                p: 4,\n                borderRadius: 2,\n                boxShadow: 3,\n                display: 'flex',\n                flexDirection: { xs: 'column', md: 'row' },\n                alignItems: 'center',\n                gap: { xs: 4, md: 8 },\n              }}\n            >\n              <Box sx={{ flexGrow: 1, width: { xs: '100%', md: 'auto' } }}>\n                <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, fontWeight: 'bold', color: darkMode ? '#ffffff' : '#333333' }}>Filters</Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6} md={3}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Search</Typography>\n                      <TextField\n                        size=\"small\"\n                        placeholder=\"Search problems...\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        fullWidth\n                        InputProps={{ startAdornment: (<SearchIcon sx={{ color: darkMode ? '#ffffff' : '#333333', mr: 1 }} />) }}\n                        sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, input: { color: darkMode ? '#ffffff' : '#333333' }, label: { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }}\n                        InputLabelProps={{ style: { color: darkMode ? '#ffffff' : '#333333' } }}\n                      />\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={3}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Status</Typography>\n                      <FormControl size=\"small\" fullWidth>\n                         <Select value={statusFilter} onChange={handleStatusChange} displayEmpty sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }} \n                           MenuProps={{\n                             PaperProps: {\n                               sx: {\n                                 bgcolor: darkMode ? '#121212' : '#ffffff',\n                                 color: darkMode ? '#ffffff' : '#333333',\n                                 '& .MuiMenuItem-root': {\n                                   color: darkMode ? '#ffffff' : '#333333',\n                                   '&:hover': {\n                                     bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                   },\n                                   '&.Mui-selected': {\n                                     bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                   },\n                                 },\n                               },\n                             },\n                           }}\n                         >\n                            <MenuItem value=\"all\">All</MenuItem>\n                            <MenuItem value=\"Completed\">Completed</MenuItem>\n                          </Select>\n                      </FormControl>\n                  </Grid>\n                   <Grid item xs={12} sm={6} md={3}>\n                       <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Difficulty</Typography>\n                       <FormControl size=\"small\" fullWidth>\n                         <Select value={difficultyFilter} onChange={handleDifficultyChange} displayEmpty sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }}\n                           MenuProps={{\n                             PaperProps: {\n                               sx: {\n                                 bgcolor: darkMode ? '#121212' : '#ffffff',\n                                 color: darkMode ? '#ffffff' : '#333333',\n                                 '& .MuiMenuItem-root': {\n                                   color: darkMode ? '#ffffff' : '#333333',\n                                   '&:hover': {\n                                     bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                   },\n                                   '&.Mui-selected': {\n                                     bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                   },\n                                 },\n                               },\n                             },\n                           }}\n                         >\n                             <MenuItem value=\"all\">All</MenuItem>\n                             <MenuItem value=\"Easy\">Easy</MenuItem>\n                             <MenuItem value=\"Medium\">Medium</MenuItem>\n                             <MenuItem value=\"Hard\">Hard</MenuItem>\n                           </Select>\n                       </FormControl>\n                   </Grid>\n                   <Grid item xs={12} sm={6} md={3}>\n                       <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Pattern</Typography>\n                       <FormControl size=\"small\" fullWidth>\n                         <Select\n                           value={patternFilter}\n                           onChange={handlePatternChange}\n                           displayEmpty\n                            sx={{\n                                bgcolor: darkMode ? '#121212' : '#ffffff', \n                                '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                                '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' },\n                                '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' },\n                                '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' }\n                              }}\n                             MenuProps={{\n                                 PaperProps: {\n                                     sx: {\n                                         maxHeight: 300,\n                                         bgcolor: darkMode ? '#121212' : '#ffffff',\n                                         color: darkMode ? '#ffffff' : '#333333',\n                                         '& .MuiMenuItem-root': {\n                                           color: darkMode ? '#ffffff' : '#333333',\n                                           '&:hover': {\n                                             bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                           },\n                                           '&.Mui-selected': {\n                                             bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                           },\n                                         },\n                                     },\n                                 },\n                                 anchorOrigin: {\n                                     vertical: 'bottom',\n                                     horizontal: 'left',\n                                 },\n                                 transformOrigin: {\n                                     vertical: 'top',\n                                     horizontal: 'left',\n                                 },\n                             }}\n                         >\n                           <MenuItem value=\"all\">All Patterns</MenuItem>\n                           <Box sx={{ p: 1, position: 'sticky', top: 0, bgcolor: darkMode ? '#121212' : '#ffffff', borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}` }}>\n                             <TextField\n                               size=\"small\"\n                               placeholder=\"Search patterns...\"\n                               value={patternSearchTerm}\n                               onChange={handlePatternSearchChange}\n                               fullWidth\n                               onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                               sx={{\n                                 bgcolor: darkMode ? '#121212' : '#ffffff',\n                                 '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' },\n                                 input: { color: darkMode ? '#ffffff' : '#333333' },\n                                 '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' },\n                                 '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' }\n                               }}\n                             />\n                           </Box>\n                           {filteredPatternOptions.map(pattern => (\n                              <MenuItem key={pattern.name} value={pattern.name}>{pattern.name}</MenuItem>\n                           ))}\n                         </Select>\n                       </FormControl>\n                   </Grid>\n                   <Grid item xs={12} sm={6} md={3} sx={{ display: 'flex', alignItems: 'flex-end', gap: 1 }}>\n                      <IconButton \n                        onClick={toggleStarredOnly} \n                        sx={{ color: showStarredOnly ? (darkMode ? '#ffeb3b' : '#ffc107') : (darkMode ? '#bdbdbd' : '#757575'), '&:hover': { color: showStarredOnly ? (darkMode ? '#ffc107' : '#ffeb3b') : (darkMode ? '#ffffff' : '#333333') } }} \n                      >\n                          {showStarredOnly ? <StarIcon /> : <StarBorderIcon />}\n                      </IconButton>\n                      <Tooltip title=\"Reset Progress\">\n                         <IconButton \n                           onClick={handleOpenResetDialog}\n                           sx={{ color: darkMode ? '#bdbdbd' : '#757575', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}\n                         >\n                           <RefreshIcon />\n                         </IconButton>\n                      </Tooltip>\n                   </Grid>\n                </Grid>\n              </Box>\n\n              <Box sx={{ position: 'relative', display: 'inline-flex', flexShrink: 0 }}>\n                <CircularProgress\n                  variant=\"determinate\"\n                  value={overallProgress}\n                  size={180}\n                  thickness={5}\n                  sx={{\n                    color: darkMode ? '#66bb6a' : '#4caf50',\n                    transition: 'stroke-dashoffset 0.3s ease 0s',\n                     '& .MuiCircularProgress-circle': {\n                       stroke: darkMode ? '#424242' : '#e0e0e0',\n                       strokeLinecap: 'round',\n                     },\n                  }}\n                />\n                <Box\n                  sx={{\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <Typography variant=\"h4\" component=\"div\" sx={{ color: darkMode ? '#ffffff' : '#333333', fontWeight: 'bold', lineHeight: 1 }}>\n                    {patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0)}<Box component=\"span\" sx={{ fontSize: '0.7em', color: darkMode ? '#bdbdbd' : '#666666' }}>/{patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)}</Box>\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\n                    Solved\n                  </Typography>\n                </Box>\n              </Box>\n\n              <Box display=\"flex\" flexDirection=\"column\" gap={1.5} sx={{ flexGrow: 1, width: { xs: '100%', md: 'auto' } }}>\n                <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 2, borderRadius: 1, textAlign: 'center', borderLeft: `4px solid #66bb6a` }}>\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: '#66bb6a' }}>Easy</Typography>\n                  <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.easy.completed}/{difficultyProgress.easy.total}</Typography>\n                </Box>\n                <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 2, borderRadius: 1, textAlign: 'center', borderLeft: `4px solid #ffa726` }}>\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: '#ffa726' }}>Med.</Typography>\n                  <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.medium.completed}/{difficultyProgress.medium.total}</Typography>\n                </Box>\n                <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 2, borderRadius: 1, textAlign: 'center', borderLeft: `4px solid #ef5350` }}>\n                  <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: '#ef5350' }}>Hard</Typography>\n                  <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.hard.completed}/{difficultyProgress.hard.total}</Typography>\n                </Box>\n              </Box>\n\n            </Box>\n          </Grid>\n\n          <Box sx={{ width: '100%', mt: 0 }}>\n            {filteredPatterns.map((pattern) => (\n              <Box key={pattern.name} sx={{ mb: 3, width: '100%' }}>\n                <PatternCard\n                  pattern={pattern}\n                  isStarred={starredPatterns.has(pattern.name)}\n                  onToggleStar={() => toggleStarPattern(pattern.name)}\n                  onQuestionStatusChange={handleQuestionStatusChange}\n                  onToggleStarQuestion={memoizedToggleStarQuestion}\n                  darkMode={darkMode}\n                />\n              </Box>\n            ))}\n          </Box>\n        </Grid>\n\n        <Dialog\n          open={openResetDialog}\n          onClose={handleCloseResetDialog}\n          aria-labelledby=\"reset-dialog-title\"\n          aria-describedby=\"reset-dialog-description\"\n        >\n          <DialogTitle id=\"reset-dialog-title\" sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#ffffff' : '#333333' }}>\n            Confirm Reset\n          </DialogTitle>\n          <DialogContent sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#e0e0e0' : '#333333' }}>\n            Are you sure you want to reset your progress?\n          </DialogContent>\n          <DialogActions sx={{ bgcolor: darkMode ? '#212121' : '#ffffff' }}>\n            <Button onClick={handleCloseResetDialog} sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>Cancel</Button>\n            <Button onClick={handleConfirmReset} color=\"error\" variant=\"contained\" autoFocus>Yes, Reset</Button>\n          </DialogActions>\n        </Dialog>\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}