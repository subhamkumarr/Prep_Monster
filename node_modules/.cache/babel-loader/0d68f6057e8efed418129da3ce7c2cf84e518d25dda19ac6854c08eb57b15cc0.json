{"ast":null,"code":"export const patterns = [{\n  name: 'Arrays',\n  progress: {\n    completed: 5,\n    total: 5\n  },\n  questions: [{\n    name: 'Move Zeroes',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Majority Element',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Product of Array Except Self',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }, {\n    name: 'Best Time to Buy and Sell Stock II',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }, {\n    name: 'First Missing Positive',\n    difficulty: 'Hard',\n    status: 'Completed'\n  }]\n}, {\n  name: 'Strings',\n  progress: {\n    completed: 3,\n    total: 3\n  },\n  questions: [{\n    name: 'Is Subsequence',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Valid Palindrome',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Reverse Words in a String',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }]\n}, {\n  name: 'Bit Manipulation',\n  progress: {\n    completed: 3,\n    total: 3\n  },\n  questions: [{\n    name: 'Single Number',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Counting Bits',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Single Number III',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }]\n}, {\n  name: 'Hash Tables',\n  progress: {\n    completed: 4,\n    total: 5\n  },\n  questions: [{\n    name: 'Isomorphic Strings',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Contains Duplicate II',\n    difficulty: 'Easy',\n    status: 'Completed'\n  }, {\n    name: 'Group Anagrams',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }, {\n    name: 'Encode and Decode TinyURL',\n    difficulty: 'Medium',\n    status: 'Completed'\n  }, {\n    name: 'Longest Consecutive Sequence',\n    difficulty: 'Medium',\n    status: 'Not Started'\n  }]\n}\n// Add more patterns here...\n];","map":{"version":3,"names":["patterns","name","progress","completed","total","questions","difficulty","status"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/data/patterns.ts"],"sourcesContent":["export interface Question {\r\n  name: string;\r\n  difficulty: 'Easy' | 'Medium' | 'Hard';\r\n  status: 'Not Started' | 'In Progress' | 'Completed';\r\n  solution?: string;\r\n  starred?: boolean;\r\n}\r\n\r\nexport interface Pattern {\r\n  name: string;\r\n  progress: {\r\n    completed: number;\r\n    total: number;\r\n  };\r\n  questions: Question[];\r\n}\r\n\r\nexport const patterns: Pattern[] = [\r\n  {\r\n    name: 'Arrays',\r\n    progress: { completed: 5, total: 5 },\r\n    questions: [\r\n      { name: 'Move Zeroes', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Majority Element', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Product of Array Except Self', difficulty: 'Medium', status: 'Completed' },\r\n      { name: 'Best Time to Buy and Sell Stock II', difficulty: 'Medium', status: 'Completed' },\r\n      { name: 'First Missing Positive', difficulty: 'Hard', status: 'Completed' }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Strings',\r\n    progress: { completed: 3, total: 3 },\r\n    questions: [\r\n      { name: 'Is Subsequence', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Valid Palindrome', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Reverse Words in a String', difficulty: 'Medium', status: 'Completed' }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Bit Manipulation',\r\n    progress: { completed: 3, total: 3 },\r\n    questions: [\r\n      { name: 'Single Number', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Counting Bits', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Single Number III', difficulty: 'Medium', status: 'Completed' }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Hash Tables',\r\n    progress: { completed: 4, total: 5 },\r\n    questions: [\r\n      { name: 'Isomorphic Strings', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Contains Duplicate II', difficulty: 'Easy', status: 'Completed' },\r\n      { name: 'Group Anagrams', difficulty: 'Medium', status: 'Completed' },\r\n      { name: 'Encode and Decode TinyURL', difficulty: 'Medium', status: 'Completed' },\r\n      { name: 'Longest Consecutive Sequence', difficulty: 'Medium', status: 'Not Started' }\r\n    ]\r\n  },\r\n  // Add more patterns here...\r\n]; "],"mappings":"AAiBA,OAAO,MAAMA,QAAmB,GAAG,CACjC;EACEC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC;EACpCC,SAAS,EAAE,CACT;IAAEJ,IAAI,EAAE,aAAa;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EAChE;IAAEN,IAAI,EAAE,kBAAkB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EACrE;IAAEN,IAAI,EAAE,8BAA8B;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC,EACnF;IAAEN,IAAI,EAAE,oCAAoC;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC,EACzF;IAAEN,IAAI,EAAE,wBAAwB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC;AAE/E,CAAC,EACD;EACEN,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC;EACpCC,SAAS,EAAE,CACT;IAAEJ,IAAI,EAAE,gBAAgB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EACnE;IAAEN,IAAI,EAAE,kBAAkB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EACrE;IAAEN,IAAI,EAAE,2BAA2B;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC;AAEpF,CAAC,EACD;EACEN,IAAI,EAAE,kBAAkB;EACxBC,QAAQ,EAAE;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC;EACpCC,SAAS,EAAE,CACT;IAAEJ,IAAI,EAAE,eAAe;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EAClE;IAAEN,IAAI,EAAE,eAAe;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EAClE;IAAEN,IAAI,EAAE,mBAAmB;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC;AAE5E,CAAC,EACD;EACEN,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC;EACpCC,SAAS,EAAE,CACT;IAAEJ,IAAI,EAAE,oBAAoB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EACvE;IAAEN,IAAI,EAAE,uBAAuB;IAAEK,UAAU,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAY,CAAC,EAC1E;IAAEN,IAAI,EAAE,gBAAgB;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC,EACrE;IAAEN,IAAI,EAAE,2BAA2B;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAY,CAAC,EAChF;IAAEN,IAAI,EAAE,8BAA8B;IAAEK,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAc,CAAC;AAEzF;AACA;AAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}