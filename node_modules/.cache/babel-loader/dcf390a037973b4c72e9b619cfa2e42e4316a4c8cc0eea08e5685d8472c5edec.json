{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addPathPrefix\", {\n  enumerable: true,\n  get: function () {\n    return addPathPrefix;\n  }\n});\nconst _parsepath = require(\"./parse-path\");\nfunction addPathPrefix(path, prefix) {\n  if (!path.startsWith('/') || !prefix) {\n    return path;\n  }\n  const {\n    pathname,\n    query,\n    hash\n  } = (0, _parsepath.parsePath)(path);\n  return \"\" + prefix + pathname + query + hash;\n}","map":{"version":3,"names":["addPathPrefix","path","prefix","startsWith","pathname","query","hash","_parsepath","parsePath"],"sources":["C:\\Users\\Subham Kumar\\Desktop\\node_modules\\next\\src\\shared\\lib\\router\\utils\\add-path-prefix.ts"],"sourcesContent":["import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n"],"mappings":";;;;;+BAMgB;;;WAAAA,aAAA;;;2BANU;AAMnB,SAASA,cAAcC,IAAY,EAAEC,MAAe;EACzD,IAAI,CAACD,IAAA,CAAKE,UAAU,CAAC,QAAQ,CAACD,MAAA,EAAQ;IACpC,OAAOD,IAAA;EACT;EAEA,MAAM;IAAEG,QAAQ;IAAEC,KAAK;IAAEC;EAAI,CAAE,GAAG,IAAAC,UAAA,CAAAC,SAAS,EAACP,IAAA;EAC5C,OAAO,EAAC,GAAEC,MAAA,GAASE,QAAA,GAAWC,KAAA,GAAQC,IAAA;AACxC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}