{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Container, Typography, TextField, Box, AppBar, Toolbar, Select, MenuItem, FormControl, IconButton, CircularProgress, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button, Card } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport WbSunnyOutlinedIcon from '@mui/icons-material/WbSunnyOutlined';\nimport { patterns as initialPatterns } from './data/patterns';\nimport PatternCard from './components/PatternCard';\nimport Author from './pages/Author';\nimport Companies from './pages/Companies';\nimport AmazonQuestions from './pages/AmazonQuestions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\nfunction MainContent({\n  darkMode,\n  patterns,\n  searchTerm,\n  handleSearchChange,\n  patternFilter,\n  handlePatternChange,\n  difficultyFilter,\n  handleDifficultyChange,\n  showStarredOnly,\n  toggleStarredOnly,\n  handleOpenResetDialog,\n  overallProgress,\n  difficultyProgress,\n  filteredPatterns,\n  starredPatterns,\n  toggleStarPattern,\n  handleQuestionStatusChange,\n  memoizedToggleStarQuestion,\n  openResetDialog,\n  handleCloseResetDialog,\n  handleConfirmReset\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    sx: {\n      mt: 4,\n      mb: 4,\n      px: {\n        xs: 2,\n        sm: 3,\n        md: 4\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        p: {\n          xs: 2,\n          sm: 3\n        },\n        bgcolor: darkMode ? '#212121' : '#ffffff',\n        borderRadius: 2,\n        boxShadow: 3,\n        mb: 4,\n        width: {\n          xs: '91%',\n          sm: '96%'\n        },\n        display: 'flex',\n        flexDirection: {\n          xs: 'column',\n          md: 'row'\n        },\n        alignItems: 'flex-start',\n        gap: {\n          xs: 3,\n          md: 4\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          width: '100%',\n          pr: {\n            md: 4\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            mb: 2,\n            fontWeight: 'bold',\n            color: darkMode ? '#ffffff' : '#333333'\n          },\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: {\n              xs: '1fr',\n              sm: '1fr 1fr',\n              md: '1fr 1fr 1fr'\n            },\n            gap: {\n              xs: 3,\n              sm: 2\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'block',\n                mb: 0.5,\n                fontWeight: 'medium',\n                color: darkMode ? '#ffffff' : '#333333'\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              placeholder: \"Search problems...\",\n              value: searchTerm,\n              onChange: handleSearchChange,\n              fullWidth: true,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  sx: {\n                    color: darkMode ? '#ffffff' : '#333333',\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 48\n                }, this)\n              },\n              sx: {\n                bgcolor: darkMode ? '#121212' : '#ffffff',\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: darkMode ? '#424242' : '#e0e0e0'\n                },\n                input: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                label: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                '&:hover .MuiOutlinedInput-notchedOutline': {\n                  borderColor: darkMode ? '#616161' : '#e0e0e0'\n                },\n                '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: darkMode ? '#00aaff' : '#333333'\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'block',\n                mb: 0.5,\n                fontWeight: 'medium',\n                color: darkMode ? '#ffffff' : '#333333'\n              },\n              children: \"Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: patternFilter,\n                onChange: handlePatternChange,\n                displayEmpty: true,\n                sx: {\n                  bgcolor: darkMode ? '#121212' : '#ffffff',\n                  '.MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#424242' : '#e0e0e0'\n                  },\n                  '.MuiSelect-select': {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  '.MuiSvgIcon-root': {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#616161' : '#e0e0e0'\n                  },\n                  '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#00aaff' : '#333333'\n                  }\n                },\n                MenuProps: {\n                  PaperProps: {\n                    sx: {\n                      maxHeight: 300,\n                      bgcolor: darkMode ? '#121212' : '#ffffff',\n                      color: darkMode ? '#ffffff' : '#333333',\n                      '& .MuiMenuItem-root': {\n                        color: darkMode ? '#ffffff' : '#333333',\n                        '&:hover': {\n                          bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                        },\n                        '&.Mui-selected': {\n                          bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                        }\n                      }\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), patterns.map(pattern => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: pattern.name,\n                  children: pattern.name\n                }, pattern.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'block',\n                mb: 0.5,\n                fontWeight: 'medium',\n                color: darkMode ? '#ffffff' : '#333333'\n              },\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: difficultyFilter,\n                onChange: handleDifficultyChange,\n                displayEmpty: true,\n                sx: {\n                  bgcolor: darkMode ? '#121212' : '#ffffff',\n                  '.MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#424242' : '#e0e0e0'\n                  },\n                  '.MuiSelect-select': {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  '.MuiSvgIcon-root': {\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  '&:hover .MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#616161' : '#e0e0e0'\n                  },\n                  '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                    borderColor: darkMode ? '#00aaff' : '#333333'\n                  }\n                },\n                MenuProps: {\n                  PaperProps: {\n                    sx: {\n                      bgcolor: darkMode ? '#121212' : '#ffffff',\n                      color: darkMode ? '#ffffff' : '#333333',\n                      '& .MuiMenuItem-root': {\n                        color: darkMode ? '#ffffff' : '#333333',\n                        '&:hover': {\n                          bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                        },\n                        '&.Mui-selected': {\n                          bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                        }\n                      }\n                    }\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Easy\",\n                  children: \"Easy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Hard\",\n                  children: \"Hard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 1,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: showStarredOnly ? \"Show All\" : \"Show Starred Only\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: toggleStarredOnly,\n              sx: {\n                color: showStarredOnly ? darkMode ? '#ffd700' : '#f57c00' : darkMode ? '#bdbdbd' : '#757575',\n                '&:hover': {\n                  color: darkMode ? '#ffd700' : '#f57c00'\n                }\n              },\n              children: showStarredOnly ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 36\n              }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Reset Progress\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleOpenResetDialog,\n              sx: {\n                color: darkMode ? '#bdbdbd' : '#757575',\n                '&:hover': {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexShrink: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 2,\n          width: {\n            xs: '100%',\n            md: 'auto'\n          },\n          borderLeft: {\n            xs: 'none',\n            md: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`\n          },\n          pl: {\n            xs: 0,\n            md: 7\n          },\n          pr: {\n            xs: 0,\n            md: 3\n          },\n          mt: {\n            xs: 2,\n            md: 0\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            fontWeight: 'bold',\n            color: darkMode ? '#ffffff' : '#333333',\n            textAlign: 'center',\n            mb: 2\n          },\n          children: \"Overall Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: {\n              xs: 'column',\n              sm: 'row'\n            },\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: {\n              xs: 3,\n              sm: 4\n            },\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative',\n              display: 'inline-flex',\n              flexShrink: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: overallProgress,\n              size: 100,\n              thickness: 4,\n              sx: {\n                color: '#4caf50',\n                transition: 'stroke-dashoffset 0.3s ease 0s',\n                '& .MuiCircularProgress-circle': {\n                  stroke: darkMode ? '#66bb6a' : '#66bb6a',\n                  strokeLinecap: 'round'\n                },\n                '& .MuiCircularProgress-circleDeterminate': {\n                  color: '#4caf50'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0,\n                position: 'absolute',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                component: \"div\",\n                sx: {\n                  color: darkMode ? '#ffffff' : '#333333',\n                  fontWeight: 'bold',\n                  lineHeight: 1\n                },\n                children: [patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0), /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"span\",\n                  sx: {\n                    fontSize: '0.7em',\n                    color: darkMode ? '#bdbdbd' : '#666666'\n                  },\n                  children: [\"/\", patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: darkMode ? '#bdbdbd' : '#666666'\n                },\n                children: \"Solved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 1,\n            sx: {\n              flexGrow: 1,\n              width: {\n                xs: '100%',\n                sm: 'auto'\n              },\n              maxWidth: {\n                sm: 200\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: darkMode ? '#333333' : '#eeeeee',\n                p: 1,\n                borderRadius: 1,\n                borderLeft: `4px solid #66bb6a`,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: 'bold',\n                  color: '#66bb6a'\n                },\n                children: \"Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                children: [difficultyProgress.easy.completed, \"/\", difficultyProgress.easy.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: darkMode ? '#333333' : '#eeeeee',\n                p: 1,\n                borderRadius: 1,\n                borderLeft: `4px solid #ffa726`,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: 'bold',\n                  color: '#ffa726'\n                },\n                children: \"Med.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                children: [difficultyProgress.medium.completed, \"/\", difficultyProgress.medium.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: darkMode ? '#333333' : '#eeeeee',\n                p: 1,\n                borderRadius: 1,\n                borderLeft: `4px solid #ef5350`,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: 'bold',\n                  color: '#ef5350'\n                },\n                children: \"Hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                children: [difficultyProgress.hard.completed, \"/\", difficultyProgress.hard.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        mt: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 3\n        },\n        children: filteredPatterns.map(pattern => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3,\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(PatternCard, {\n            pattern: pattern,\n            isStarred: starredPatterns.has(pattern.name),\n            onToggleStar: () => toggleStarPattern(pattern.name),\n            onQuestionStatusChange: handleQuestionStatusChange,\n            onToggleStarQuestion: memoizedToggleStarQuestion,\n            darkMode: darkMode,\n            searchTerm: searchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)\n        }, pattern.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openResetDialog,\n      onClose: handleCloseResetDialog,\n      \"aria-labelledby\": \"reset-dialog-title\",\n      \"aria-describedby\": \"reset-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"reset-dialog-title\",\n        sx: {\n          bgcolor: darkMode ? '#212121' : '#ffffff',\n          color: darkMode ? '#ffffff' : '#333333'\n        },\n        children: \"Confirm Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          bgcolor: darkMode ? '#212121' : '#ffffff',\n          color: darkMode ? '#e0e0e0' : '#333333'\n        },\n        children: \"Are you sure you want to reset your progress?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          bgcolor: darkMode ? '#212121' : '#ffffff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseResetDialog,\n          sx: {\n            color: darkMode ? '#bdbdbd' : '#666666'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmReset,\n          color: \"error\",\n          variant: \"contained\",\n          autoFocus: true,\n          children: \"Yes, Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_c = MainContent;\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [patterns, setPatterns] = useState(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState('all');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [patternFilter, setPatternFilter] = useState('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    medium: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    hard: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    }\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0,\n      easyTotal = 0;\n    let mediumCompleted = 0,\n      mediumTotal = 0;\n    let hardCompleted = 0,\n      hardTotal = 0;\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n    setOverallProgress(totalQuestions === 0 ? 0 : completedQuestions / totalQuestions * 100);\n    setDifficultyProgress({\n      easy: {\n        completed: easyCompleted,\n        total: easyTotal,\n        percentage: easyTotal === 0 ? 0 : easyCompleted / easyTotal * 100\n      },\n      medium: {\n        completed: mediumCompleted,\n        total: mediumTotal,\n        percentage: mediumTotal === 0 ? 0 : mediumCompleted / mediumTotal * 100\n      },\n      hard: {\n        completed: hardCompleted,\n        total: hardTotal,\n        percentage: hardTotal === 0 ? 0 : hardCompleted / hardTotal * 100\n      }\n    });\n  }, [patterns, darkMode]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleDifficultyChange = event => {\n    setDifficultyFilter(event.target.value);\n  };\n  const handleStatusChange = event => {\n    setStatusFilter(event.target.value);\n  };\n  const handlePatternSearchChange = event => {\n    setPatternSearchTerm(event.target.value);\n  };\n  const handlePatternChange = event => {\n    setPatternFilter(event.target.value);\n  };\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n  const toggleStarPattern = patternName => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n  const handleQuestionStatusChange = React.useCallback((patternName, questionName, newStatus) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                status: newStatus\n              };\n            }\n            return question;\n          });\n\n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return {\n            ...pattern,\n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const toggleStarQuestion = (patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  };\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase()) || pattern.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase()) || pattern.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return {\n      ...pattern,\n      questions: questionsMatchFilters\n    };\n  });\n  const memoizedToggleStarQuestion = React.useCallback((patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started',\n        starred: false\n      })),\n      progress: {\n        completed: 0,\n        total: pattern.questions.length\n      }\n    }));\n    setPatterns(resetPatterns);\n    handleCloseResetDialog();\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const filteredPatternOptions = initialPatterns.filter(pattern => pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase()));\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n  const handleMobileMenuClose = () => {\n    setMobileMenuOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    basename: \"/Prep_Monster\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        bgcolor: darkMode ? '#121212' : '#f5f5f5',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        sx: {\n          bgcolor: darkMode ? '#1e1e1e' : '#ffffff',\n          boxShadow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              color: darkMode ? '#ffffff' : '#333333'\n            },\n            children: \"DSA Patterns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleDarkMode,\n            sx: {\n              color: darkMode ? '#ffffff' : '#333333'\n            },\n            children: darkMode ? /*#__PURE__*/_jsxDEV(WbSunnyOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(MainContent, {\n            darkMode: darkMode,\n            patterns: patterns,\n            searchTerm: searchTerm,\n            handleSearchChange: handleSearchChange,\n            patternFilter: patternFilter,\n            handlePatternChange: handlePatternChange,\n            difficultyFilter: difficultyFilter,\n            handleDifficultyChange: handleDifficultyChange,\n            showStarredOnly: showStarredOnly,\n            toggleStarredOnly: toggleStarredOnly,\n            handleOpenResetDialog: handleOpenResetDialog,\n            overallProgress: overallProgress,\n            difficultyProgress: difficultyProgress,\n            filteredPatterns: filteredPatterns,\n            starredPatterns: starredPatterns,\n            toggleStarPattern: toggleStarPattern,\n            handleQuestionStatusChange: handleQuestionStatusChange,\n            memoizedToggleStarQuestion: memoizedToggleStarQuestion,\n            openResetDialog: openResetDialog,\n            handleCloseResetDialog: handleCloseResetDialog,\n            handleConfirmReset: handleConfirmReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/author\",\n          element: /*#__PURE__*/_jsxDEV(Author, {\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/companies\",\n          element: /*#__PURE__*/_jsxDEV(Companies, {\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/amazon-questions\",\n          element: /*#__PURE__*/_jsxDEV(AmazonQuestions, {\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 626,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SpU+Ae/29ZJFimorOfrR9B4qsU0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Routes","Route","Container","Typography","TextField","Box","AppBar","Toolbar","Select","MenuItem","FormControl","IconButton","CircularProgress","Tooltip","Dialog","DialogTitle","DialogContent","DialogActions","Button","Card","SearchIcon","StarBorderIcon","StarIcon","RefreshIcon","DarkModeOutlinedIcon","WbSunnyOutlinedIcon","patterns","initialPatterns","PatternCard","Author","Companies","AmazonQuestions","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","DARK_MODE_STORAGE_KEY","MainContent","darkMode","searchTerm","handleSearchChange","patternFilter","handlePatternChange","difficultyFilter","handleDifficultyChange","showStarredOnly","toggleStarredOnly","handleOpenResetDialog","overallProgress","difficultyProgress","filteredPatterns","starredPatterns","toggleStarPattern","handleQuestionStatusChange","memoizedToggleStarQuestion","openResetDialog","handleCloseResetDialog","handleConfirmReset","maxWidth","sx","mt","mb","px","xs","sm","md","children","elevation","p","bgcolor","borderRadius","boxShadow","width","display","flexDirection","alignItems","gap","flexGrow","pr","variant","component","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","size","placeholder","value","onChange","fullWidth","InputProps","startAdornment","mr","borderColor","input","label","InputLabelProps","style","displayEmpty","MenuProps","PaperProps","maxHeight","map","pattern","name","justifyContent","title","onClick","flexShrink","borderLeft","pl","textAlign","position","thickness","transition","stroke","strokeLinecap","top","left","bottom","right","lineHeight","reduce","sum","questions","filter","q","status","length","fontSize","easy","completed","total","medium","hard","isStarred","has","onToggleStar","onQuestionStatusChange","onToggleStarQuestion","open","onClose","id","autoFocus","_c","App","_s","setDarkMode","savedMode","localStorage","getItem","JSON","parse","mobileMenuOpen","setMobileMenuOpen","setPatterns","savedPatterns","setSearchTerm","setDifficultyFilter","statusFilter","setStatusFilter","setPatternFilter","patternSearchTerm","setPatternSearchTerm","setShowStarredOnly","setStarredPatterns","Set","setOverallProgress","setDifficultyProgress","percentage","setOpenResetDialog","setItem","stringify","totalQuestions","completedQuestions","easyCompleted","easyTotal","mediumCompleted","mediumTotal","hardCompleted","hardTotal","forEach","question","difficulty","event","target","handleStatusChange","handlePatternSearchChange","prev","patternName","newSet","delete","add","useCallback","questionName","newStatus","prevPatterns","updatedQuestions","progress","toggleStarQuestion","starred","matchesPattern","questionsMatchFilters","matchesSearch","toLowerCase","includes","matchesDifficulty","matchesStatus","matchesStarred","resetPatterns","toggleDarkMode","filteredPatternOptions","toggleMobileMenu","handleMobileMenuClose","basename","minHeight","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Link as RouterLink } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Box,\n  Grid,\n  AppBar,\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  SelectChangeEvent,\n  Link,\n  IconButton,\n  LinearProgress,\n  Switch,\n  FormControlLabel,\n  CircularProgress,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Card,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider\n} from '@mui/material';\nimport type { GridProps } from '@mui/material/Grid';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport WbSunnyOutlinedIcon from '@mui/icons-material/WbSunnyOutlined';\nimport { motion } from 'framer-motion';\n\nimport { patterns as initialPatterns, Pattern, Question } from './data/patterns';\nimport PatternCard from './components/PatternCard';\nimport Author from './pages/Author';\nimport Companies from './pages/Companies';\nimport AmazonQuestions from './pages/AmazonQuestions';\n\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\n\ninterface MainContentProps {\n  darkMode: boolean;\n  patterns: Pattern[];\n  searchTerm: string;\n  handleSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  patternFilter: string;\n  handlePatternChange: (event: SelectChangeEvent) => void;\n  difficultyFilter: string;\n  handleDifficultyChange: (event: SelectChangeEvent) => void;\n  showStarredOnly: boolean;\n  toggleStarredOnly: () => void;\n  handleOpenResetDialog: () => void;\n  overallProgress: number;\n  difficultyProgress: {\n    easy: { completed: number; total: number; percentage: number };\n    medium: { completed: number; total: number; percentage: number };\n    hard: { completed: number; total: number; percentage: number };\n  };\n  filteredPatterns: Pattern[];\n  starredPatterns: Set<string>;\n  toggleStarPattern: (patternName: string) => void;\n  handleQuestionStatusChange: (patternName: string, questionName: string, newStatus: Question['status']) => void;\n  memoizedToggleStarQuestion: (patternName: string, questionName: string) => void;\n  openResetDialog: boolean;\n  handleCloseResetDialog: () => void;\n  handleConfirmReset: () => void;\n}\n\nfunction MainContent({\n  darkMode,\n  patterns,\n  searchTerm,\n  handleSearchChange,\n  patternFilter,\n  handlePatternChange,\n  difficultyFilter,\n  handleDifficultyChange,\n  showStarredOnly,\n  toggleStarredOnly,\n  handleOpenResetDialog,\n  overallProgress,\n  difficultyProgress,\n  filteredPatterns,\n  starredPatterns,\n  toggleStarPattern,\n  handleQuestionStatusChange,\n  memoizedToggleStarQuestion,\n  openResetDialog,\n  handleCloseResetDialog,\n  handleConfirmReset\n}: MainContentProps) {\n  return (\n    <Container maxWidth={false} sx={{ mt: 4, mb: 4, px: { xs: 2, sm: 3, md: 4 } }}>\n      <Card\n        elevation={3}\n        sx={{\n          p: { xs: 2, sm: 3 },\n          bgcolor: darkMode ? '#212121' : '#ffffff',\n          borderRadius: 2,\n          boxShadow: 3,\n          mb: 4,\n          width: { xs: '91%', sm: '96%' },\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          alignItems: 'flex-start',\n          gap: { xs: 3, md: 4 }\n        }}\n      >\n        <Box sx={{ \n          flexGrow: 1, \n          width: '100%', \n          pr: { md: 4 }\n        }}>\n          <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, fontWeight: 'bold', color: darkMode ? '#ffffff' : '#333333' }}>Filters</Typography>\n          <Box sx={{ \n            display: 'grid', \n            gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr' }, \n            gap: { xs: 3, sm: 2 }\n          }}>\n            <Box>\n              <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Search</Typography>\n              <TextField\n                size=\"small\"\n                placeholder=\"Search problems...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n                fullWidth\n                InputProps={{ startAdornment: (<SearchIcon sx={{ color: darkMode ? '#ffffff' : '#333333', mr: 1 }} />) }}\n                sx={{ \n                  bgcolor: darkMode ? '#121212' : '#ffffff', \n                  '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                  input: { color: darkMode ? '#ffffff' : '#333333' }, \n                  label: { color: darkMode ? '#ffffff' : '#333333' }, \n                  '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, \n                  '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } \n                }}\n                InputLabelProps={{ style: { color: darkMode ? '#ffffff' : '#333333' } }}\n              />\n            </Box>\n            <Box>\n              <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Pattern</Typography>\n              <FormControl size=\"small\" fullWidth>\n                <Select\n                  value={patternFilter}\n                  onChange={handlePatternChange}\n                  displayEmpty\n                  sx={{ \n                    bgcolor: darkMode ? '#121212' : '#ffffff', \n                    '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                    '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, \n                    '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, \n                    '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, \n                    '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } \n                  }}\n                  MenuProps={{\n                    PaperProps: {\n                      sx: {\n                        maxHeight: 300,\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        color: darkMode ? '#ffffff' : '#333333',\n                        '& .MuiMenuItem-root': {\n                          color: darkMode ? '#ffffff' : '#333333',\n                          '&:hover': {\n                            bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                          },\n                          '&.Mui-selected': {\n                            bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                          },\n                        },\n                      },\n                    },\n                  }}\n                >\n                  <MenuItem value=\"all\">All</MenuItem>\n                  {patterns.map((pattern) => (\n                    <MenuItem key={pattern.name} value={pattern.name}>{pattern.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n            <Box>\n              <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Difficulty</Typography>\n              <FormControl size=\"small\" fullWidth>\n                <Select \n                  value={difficultyFilter} \n                  onChange={handleDifficultyChange} \n                  displayEmpty \n                  sx={{ \n                    bgcolor: darkMode ? '#121212' : '#ffffff', \n                    '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                    '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, \n                    '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, \n                    '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, \n                    '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } \n                  }}\n                  MenuProps={{\n                    PaperProps: {\n                      sx: {\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        color: darkMode ? '#ffffff' : '#333333',\n                        '& .MuiMenuItem-root': {\n                          color: darkMode ? '#ffffff' : '#333333',\n                          '&:hover': {\n                            bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                          },\n                          '&.Mui-selected': {\n                            bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                          },\n                        },\n                      },\n                    },\n                  }}\n                >\n                  <MenuItem value=\"all\">All</MenuItem>\n                  <MenuItem value=\"Easy\">Easy</MenuItem>\n                  <MenuItem value=\"Medium\">Medium</MenuItem>\n                  <MenuItem value=\"Hard\">Hard</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, mt: 2 }}>\n            <Tooltip title={showStarredOnly ? \"Show All\" : \"Show Starred Only\"}>\n              <IconButton\n                onClick={toggleStarredOnly}\n                sx={{ \n                  color: showStarredOnly ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\n                  '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\n                }}\n              >\n                {showStarredOnly ? <StarIcon /> : <StarBorderIcon />}\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Reset Progress\">\n              <IconButton\n                onClick={handleOpenResetDialog}\n                sx={{ color: darkMode ? '#bdbdbd' : '#757575', '&:hover': { color: darkMode ? '#ffffff' : '#333333'} }}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n\n        <Box sx={{ \n          flexShrink: 0, \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center', \n          gap: 2, \n          width: { xs: '100%', md: 'auto' }, \n          borderLeft: { xs: 'none', md: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}` }, \n          pl: { xs: 0, md: 7 },\n          pr: { xs: 0, md: 3 },\n          mt: { xs: 2, md: 0 }\n        }}>\n          <Typography \n            variant=\"h6\" \n            component=\"div\" \n            sx={{ \n              fontWeight: 'bold', \n              color: darkMode ? '#ffffff' : '#333333', \n              textAlign: 'center',\n              mb: 2\n            }}\n          >\n            Overall Progress\n          </Typography>\n\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: { xs: 'column', sm: 'row' }, \n            justifyContent: 'center', \n            alignItems: 'center', \n            gap: { xs: 3, sm: 4 }, \n            width: '100%' \n          }}>\n            <Box sx={{ position: 'relative', display: 'inline-flex', flexShrink: 0 }}>\n              <CircularProgress\n                variant=\"determinate\"\n                value={overallProgress}\n                size={100}\n                thickness={4}\n                sx={{\n                  color: '#4caf50',\n                  transition: 'stroke-dashoffset 0.3s ease 0s',\n                  '& .MuiCircularProgress-circle': {\n                    stroke: darkMode ? '#66bb6a' : '#66bb6a',\n                    strokeLinecap: 'round',\n                  },\n                  '& .MuiCircularProgress-circleDeterminate': {\n                    color: '#4caf50'\n                  }\n                }}\n              />\n              <Box\n                sx={{\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: 'absolute',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography variant=\"h4\" component=\"div\" sx={{ color: darkMode ? '#ffffff' : '#333333', fontWeight: 'bold', lineHeight: 1 }}>\n                  {patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0)}\n                  <Box component=\"span\" sx={{ fontSize: '0.7em', color: darkMode ? '#bdbdbd' : '#666666' }}>\n                    /{patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)}\n                  </Box>\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\n                  Solved\n                </Typography>\n              </Box>\n            </Box>\n\n            <Box display=\"flex\" flexDirection=\"column\" gap={1} sx={{ flexGrow: 1, width: { xs: '100%', sm: 'auto' }, maxWidth: { sm: 200 } }}>\n              <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #66bb6a`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#66bb6a' }}>Easy</Typography>\n                <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.easy.completed}/{difficultyProgress.easy.total}</Typography>\n              </Box>\n              <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #ffa726`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#ffa726' }}>Med.</Typography>\n                <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.medium.completed}/{difficultyProgress.medium.total}</Typography>\n              </Box>\n              <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #ef5350`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#ef5350' }}>Hard</Typography>\n                <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.hard.completed}/{difficultyProgress.hard.total}</Typography>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Card>\n\n      <Box sx={{ width: '100%', mt: 0 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n          {filteredPatterns.map((pattern) => (\n            <Box key={pattern.name} sx={{ mb: 3, width: '100%' }}>\n              <PatternCard\n                pattern={pattern}\n                isStarred={starredPatterns.has(pattern.name)}\n                onToggleStar={() => toggleStarPattern(pattern.name)}\n                onQuestionStatusChange={handleQuestionStatusChange}\n                onToggleStarQuestion={memoizedToggleStarQuestion}\n                darkMode={darkMode}\n                searchTerm={searchTerm}\n              />\n            </Box>\n          ))}\n        </Box>\n      </Box>\n\n      <Dialog\n        open={openResetDialog}\n        onClose={handleCloseResetDialog}\n        aria-labelledby=\"reset-dialog-title\"\n        aria-describedby=\"reset-dialog-description\"\n      >\n        <DialogTitle id=\"reset-dialog-title\" sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#ffffff' : '#333333' }}>\n          Confirm Reset\n        </DialogTitle>\n        <DialogContent sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#e0e0e0' : '#333333' }}>\n          Are you sure you want to reset your progress?\n        </DialogContent>\n        <DialogActions sx={{ bgcolor: darkMode ? '#212121' : '#ffffff' }}>\n          <Button onClick={handleCloseResetDialog} sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>Cancel</Button>\n          <Button onClick={handleConfirmReset} color=\"error\" variant=\"contained\" autoFocus>Yes, Reset</Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [patterns, setPatterns] = useState<Pattern[]>(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [patternFilter, setPatternFilter] = useState<string>('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState<Set<string>>(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: { completed: 0, total: 0, percentage: 0 },\n    medium: { completed: 0, total: 0, percentage: 0 },\n    hard: { completed: 0, total: 0, percentage: 0 },\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0, easyTotal = 0;\n    let mediumCompleted = 0, mediumTotal = 0;\n    let hardCompleted = 0, hardTotal = 0;\n\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n\n    setOverallProgress(totalQuestions === 0 ? 0 : (completedQuestions / totalQuestions) * 100);\n    setDifficultyProgress({\n      easy: { completed: easyCompleted, total: easyTotal, percentage: easyTotal === 0 ? 0 : (easyCompleted / easyTotal) * 100 },\n      medium: { completed: mediumCompleted, total: mediumTotal, percentage: mediumTotal === 0 ? 0 : (mediumCompleted / mediumTotal) * 100 },\n      hard: { completed: hardCompleted, total: hardTotal, percentage: hardTotal === 0 ? 0 : (hardCompleted / hardTotal) * 100 },\n    });\n  }, [patterns, darkMode]);\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleDifficultyChange = (event: SelectChangeEvent) => {\n    setDifficultyFilter(event.target.value);\n  };\n\n  const handleStatusChange = (event: SelectChangeEvent) => {\n    setStatusFilter(event.target.value);\n  };\n\n  const handlePatternSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPatternSearchTerm(event.target.value);\n  };\n\n  const handlePatternChange = (event: SelectChangeEvent) => {\n    setPatternFilter(event.target.value);\n  };\n\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n\n  const toggleStarPattern = (patternName: string) => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n\n  const handleQuestionStatusChange = React.useCallback((patternName: string, questionName: string, newStatus: Question['status']) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, status: newStatus };\n            }\n            return question;\n          });\n          \n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return { \n            ...pattern, \n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const toggleStarQuestion = (patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  };\n\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || \n        question.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        pattern.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || \n        question.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        pattern.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return { ...pattern, questions: questionsMatchFilters };\n  });\n\n  const memoizedToggleStarQuestion = React.useCallback((patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started' as Question['status'],\n        starred: false,\n      })),\n      progress: { completed: 0, total: pattern.questions.length }\n    }));\n    setPatterns(resetPatterns);\n\n    handleCloseResetDialog();\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const filteredPatternOptions = initialPatterns.filter(pattern => \n    pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase())\n  );\n\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMenuOpen(false);\n  };\n\n  return (\n    <BrowserRouter basename=\"/Prep_Monster\">\n      <Box sx={{ \n        flexGrow: 1, \n        bgcolor: darkMode ? '#121212' : '#f5f5f5',\n        minHeight: '100vh'\n      }}>\n        <AppBar position=\"static\" sx={{ bgcolor: darkMode ? '#1e1e1e' : '#ffffff', boxShadow: 1 }}>\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, color: darkMode ? '#ffffff' : '#333333' }}>\n              DSA Patterns\n              </Typography>\n            <IconButton onClick={toggleDarkMode} sx={{ color: darkMode ? '#ffffff' : '#333333' }}>\n              {darkMode ? <WbSunnyOutlinedIcon /> : <DarkModeOutlinedIcon />}\n              </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Routes>\n          <Route path=\"/\" element={\n            <MainContent \n              darkMode={darkMode}\n              patterns={patterns}\n              searchTerm={searchTerm}\n              handleSearchChange={handleSearchChange}\n              patternFilter={patternFilter}\n              handlePatternChange={handlePatternChange}\n              difficultyFilter={difficultyFilter}\n              handleDifficultyChange={handleDifficultyChange}\n              showStarredOnly={showStarredOnly}\n              toggleStarredOnly={toggleStarredOnly}\n              handleOpenResetDialog={handleOpenResetDialog}\n              overallProgress={overallProgress}\n              difficultyProgress={difficultyProgress}\n              filteredPatterns={filteredPatterns}\n              starredPatterns={starredPatterns}\n              toggleStarPattern={toggleStarPattern}\n              handleQuestionStatusChange={handleQuestionStatusChange}\n              memoizedToggleStarQuestion={memoizedToggleStarQuestion}\n              openResetDialog={openResetDialog}\n              handleCloseResetDialog={handleCloseResetDialog}\n              handleConfirmReset={handleConfirmReset}\n            />\n          } />\n          <Route path=\"/author\" element={<Author darkMode={darkMode} />} />\n          <Route path=\"/companies\" element={<Companies darkMode={darkMode} />} />\n          <Route path=\"/amazon-questions\" element={<AmazonQuestions darkMode={darkMode} />} />\n        </Routes>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}