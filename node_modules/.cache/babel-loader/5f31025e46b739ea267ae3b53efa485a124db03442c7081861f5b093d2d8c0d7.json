{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\components\\\\PatternCard.tsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, LinearProgress, Box, IconButton } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternCard = ({\n  pattern,\n  onToggleStar,\n  isStarred\n}) => {\n  const progress = pattern.progress.completed / pattern.progress.total * 100;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      minWidth: 275,\n      mb: 2,\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: pattern.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onToggleStar,\n          size: \"small\",\n          children: isStarred ? /*#__PURE__*/_jsxDEV(StarIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mt: 1\n        },\n        children: [\"Progress: \", pattern.progress.completed, \" / \", pattern.progress.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        sx: {\n          mt: 1,\n          height: 8,\n          borderRadius: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: pattern.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 0.5,\n            color: question.status === 'Completed' ? 'success.main' : 'text.primary'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: question.difficulty === 'Easy' ? '#4caf50' : question.difficulty === 'Medium' ? '#ff9800' : '#f44336'\n            },\n            children: question.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PatternCard;\nexport default PatternCard;\nvar _c;\n$RefreshReg$(_c, \"PatternCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","LinearProgress","Box","IconButton","StarIcon","StarBorderIcon","jsxDEV","_jsxDEV","PatternCard","pattern","onToggleStar","isStarred","progress","completed","total","sx","minWidth","mb","position","children","display","justifyContent","alignItems","variant","component","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","color","mt","value","height","borderRadius","questions","map","question","index","status","style","difficulty","_c","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/components/PatternCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, LinearProgress, Box, IconButton } from '@mui/material';\r\nimport { Pattern } from '../data/patterns';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\ninterface PatternCardProps {\r\n  pattern: Pattern;\r\n  onToggleStar?: () => void;\r\n  isStarred?: boolean;\r\n}\r\n\r\nconst PatternCard: React.FC<PatternCardProps> = ({ pattern, onToggleStar, isStarred }) => {\r\n  const progress = (pattern.progress.completed / pattern.progress.total) * 100;\r\n\r\n  return (\r\n    <Card sx={{ minWidth: 275, mb: 2, position: 'relative' }}>\r\n      <CardContent>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {pattern.name}\r\n          </Typography>\r\n          <IconButton onClick={onToggleStar} size=\"small\">\r\n            {isStarred ? <StarIcon color=\"primary\" /> : <StarBorderIcon />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n          Progress: {pattern.progress.completed} / {pattern.progress.total}\r\n        </Typography>\r\n        <LinearProgress \r\n          variant=\"determinate\" \r\n          value={progress} \r\n          sx={{ mt: 1, height: 8, borderRadius: 4 }}\r\n        />\r\n        <Box sx={{ mt: 2 }}>\r\n          {pattern.questions.map((question, index) => (\r\n            <Typography \r\n              key={index} \r\n              variant=\"body2\" \r\n              sx={{ \r\n                display: 'flex', \r\n                justifyContent: 'space-between',\r\n                mb: 0.5,\r\n                color: question.status === 'Completed' ? 'success.main' : 'text.primary'\r\n              }}\r\n            >\r\n              <span>{question.name}</span>\r\n              <span style={{ color: \r\n                question.difficulty === 'Easy' ? '#4caf50' : \r\n                question.difficulty === 'Medium' ? '#ff9800' : '#f44336'\r\n              }}>\r\n                {question.difficulty}\r\n              </span>\r\n            </Typography>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PatternCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}