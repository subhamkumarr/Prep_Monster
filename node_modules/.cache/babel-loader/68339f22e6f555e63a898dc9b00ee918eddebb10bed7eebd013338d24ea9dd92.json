{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Container, Typography, TextField, Box, Grid, AppBar, Toolbar, Select, MenuItem, FormControl, Link, IconButton, CircularProgress, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button, Card } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport WbSunnyOutlinedIcon from '@mui/icons-material/WbSunnyOutlined';\nimport { motion } from 'framer-motion';\nimport { patterns as initialPatterns } from './data/patterns';\nimport PatternCard from './components/PatternCard';\nimport Author from './pages/Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    if (savedMode !== null) {\n      return JSON.parse(savedMode);\n    }\n    return true;\n  });\n  const [patterns, setPatterns] = useState(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState('all');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [patternFilter, setPatternFilter] = useState('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    medium: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    },\n    hard: {\n      completed: 0,\n      total: 0,\n      percentage: 0\n    }\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0,\n      easyTotal = 0;\n    let mediumCompleted = 0,\n      mediumTotal = 0;\n    let hardCompleted = 0,\n      hardTotal = 0;\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n    setOverallProgress(totalQuestions === 0 ? 0 : completedQuestions / totalQuestions * 100);\n    setDifficultyProgress({\n      easy: {\n        completed: easyCompleted,\n        total: easyTotal,\n        percentage: easyTotal === 0 ? 0 : easyCompleted / easyTotal * 100\n      },\n      medium: {\n        completed: mediumCompleted,\n        total: mediumTotal,\n        percentage: mediumTotal === 0 ? 0 : mediumCompleted / mediumTotal * 100\n      },\n      hard: {\n        completed: hardCompleted,\n        total: hardTotal,\n        percentage: hardTotal === 0 ? 0 : hardCompleted / hardTotal * 100\n      }\n    });\n  }, [patterns, darkMode]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleDifficultyChange = event => {\n    setDifficultyFilter(event.target.value);\n  };\n  const handleStatusChange = event => {\n    setStatusFilter(event.target.value);\n  };\n  const handlePatternSearchChange = event => {\n    setPatternSearchTerm(event.target.value);\n  };\n  const handlePatternChange = event => {\n    setPatternFilter(event.target.value);\n  };\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n  const toggleStarPattern = patternName => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n  const handleQuestionStatusChange = React.useCallback((patternName, questionName, newStatus) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                status: newStatus\n              };\n            }\n            return question;\n          });\n\n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return {\n            ...pattern,\n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const toggleStarQuestion = (patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  };\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return {\n      ...pattern,\n      questions: questionsMatchFilters\n    };\n  });\n  const memoizedToggleStarQuestion = React.useCallback((patternName, questionName) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return {\n                ...question,\n                starred: !question.starred\n              };\n            }\n            return question;\n          });\n          return {\n            ...pattern,\n            questions: updatedQuestions\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started',\n        starred: false\n      })),\n      progress: {\n        completed: 0,\n        total: pattern.questions.length\n      }\n    }));\n    setPatterns(resetPatterns);\n    handleCloseResetDialog();\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  const filteredPatternOptions = initialPatterns.filter(pattern => pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5',\n        minHeight: '100vh',\n        color: darkMode ? '#e0e0e0' : '#333333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"sticky\",\n        sx: {\n          bgcolor: darkMode ? '#262626' : '#ffffff',\n          boxShadow: 3,\n          zIndex: 1100\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 0,\n              fontWeight: 'bold',\n              color: darkMode ? '#ffffff' : '#333333',\n              letterSpacing: '0.1em',\n              mr: 4\n            },\n            children: [\"Pre\", /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                color: '#00aaff'\n              },\n              children: \"Monster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: {\n                xs: 'none',\n                md: 'flex'\n              },\n              alignItems: 'center',\n              mr: 3,\n              gap: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"/author\",\n              color: \"inherit\",\n              underline: \"none\",\n              sx: {\n                color: darkMode ? '#bdbdbd' : '#666666',\n                fontWeight: 'medium',\n                '&:hover': {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              },\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/companies\",\n              color: \"inherit\",\n              underline: \"none\",\n              sx: {\n                color: darkMode ? '#bdbdbd' : '#666666',\n                fontWeight: 'medium',\n                '&:hover': {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              },\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              rotate: darkMode ? -90 : 90\n            },\n            animate: {\n              opacity: 1,\n              rotate: 0\n            },\n            transition: {\n              duration: 0.3,\n              ease: \"easeInOut\"\n            },\n            onClick: toggleDarkMode,\n            style: {\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              marginRight: '16px'\n            },\n            children: darkMode ? /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {\n              sx: {\n                color: '#90caf9'\n              },\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(WbSunnyOutlinedIcon, {\n              sx: {\n                color: '#f57c00'\n              },\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, darkMode ? 'dark' : 'light', false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              href: \"#\",\n              target: \"_blank\",\n              sx: {\n                color: darkMode ? '#bdbdbd' : '#666666',\n                '&:hover': {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(GitHubIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 173\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                },\n                color: darkMode ? '#bdbdbd' : '#666666',\n                '&:hover': {\n                  color: darkMode ? '#ffffff' : '#333333'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 186\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/author\",\n          element: /*#__PURE__*/_jsxDEV(Author, {\n            darkMode: darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/companies\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Company List Page Placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/companies/:companyName\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Company Questions Page Placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: false,\n            sx: {\n              mt: 4,\n              mb: 4,\n              px: {\n                xs: 2,\n                sm: 3,\n                md: 4\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              elevation: 3,\n              sx: {\n                p: 3,\n                bgcolor: darkMode ? '#212121' : '#ffffff',\n                borderRadius: 2,\n                boxShadow: 3,\n                mb: 4,\n                width: '97%',\n                display: 'flex',\n                flexDirection: {\n                  xs: 'column',\n                  md: 'row'\n                },\n                alignItems: 'flex-start',\n                gap: {\n                  xs: 1,\n                  md: 1\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1,\n                  width: {\n                    xs: '100%',\n                    md: 'auto'\n                  },\n                  pr: {\n                    md: 12\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  sx: {\n                    mb: 2,\n                    fontWeight: 'bold',\n                    color: darkMode ? '#ffffff' : '#333333'\n                  },\n                  children: \"Filters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5,\n                        fontWeight: 'medium',\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      children: \"Search\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      size: \"small\",\n                      placeholder: \"Search problems...\",\n                      value: searchTerm,\n                      onChange: handleSearchChange,\n                      fullWidth: true,\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                          sx: {\n                            color: darkMode ? '#ffffff' : '#333333',\n                            mr: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 56\n                        }, this)\n                      },\n                      sx: {\n                        bgcolor: darkMode ? '#121212' : '#ffffff',\n                        '.MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#424242' : '#e0e0e0'\n                        },\n                        input: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        label: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#616161' : '#e0e0e0'\n                        },\n                        '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                          borderColor: darkMode ? '#00aaff' : '#333333'\n                        }\n                      },\n                      InputLabelProps: {\n                        style: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5,\n                        fontWeight: 'medium',\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      children: \"Pattern\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      size: \"small\",\n                      fullWidth: true,\n                      children: /*#__PURE__*/_jsxDEV(Select, {\n                        value: patternFilter,\n                        onChange: handlePatternChange,\n                        displayEmpty: true,\n                        sx: {\n                          bgcolor: darkMode ? '#121212' : '#ffffff',\n                          '.MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#424242' : '#e0e0e0'\n                          },\n                          '.MuiSelect-select': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '.MuiSvgIcon-root': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#616161' : '#e0e0e0'\n                          },\n                          '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#00aaff' : '#333333'\n                          }\n                        },\n                        MenuProps: {\n                          PaperProps: {\n                            sx: {\n                              maxHeight: 300,\n                              bgcolor: darkMode ? '#121212' : '#ffffff',\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '& .MuiMenuItem-root': {\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '&:hover': {\n                                  bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                                },\n                                '&.Mui-selected': {\n                                  bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                                }\n                              }\n                            }\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            position: 'sticky',\n                            top: 0,\n                            bgcolor: darkMode ? '#121212' : '#ffffff',\n                            borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`,\n                            p: 1,\n                            zIndex: 1\n                          },\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            size: \"small\",\n                            placeholder: \"Search patterns...\",\n                            value: patternSearchTerm,\n                            onChange: handlePatternSearchChange,\n                            fullWidth: true,\n                            onClick: e => e.stopPropagation(),\n                            sx: {\n                              bgcolor: darkMode ? '#121212' : '#ffffff',\n                              '.MuiOutlinedInput-notchedOutline': {\n                                borderColor: darkMode ? '#424242' : '#e0e0e0'\n                              },\n                              input: {\n                                color: darkMode ? '#ffffff' : '#333333'\n                              },\n                              '&:hover .MuiOutlinedInput-notchedOutline': {\n                                borderColor: darkMode ? '#616161' : '#e0e0e0'\n                              },\n                              '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                                borderColor: darkMode ? '#00aaff' : '#333333'\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"all\",\n                          children: \"All Patterns\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 397,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            borderTop: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`,\n                            borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`,\n                            my: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 398,\n                          columnNumber: 27\n                        }, this), filteredPatternOptions.map(pattern => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: pattern.name,\n                          children: pattern.name\n                        }, pattern.name, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 400,\n                          columnNumber: 29\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    md: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5,\n                        fontWeight: 'medium',\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      size: \"small\",\n                      fullWidth: true,\n                      children: /*#__PURE__*/_jsxDEV(Select, {\n                        value: statusFilter,\n                        onChange: handleStatusChange,\n                        displayEmpty: true,\n                        sx: {\n                          bgcolor: darkMode ? '#121212' : '#ffffff',\n                          '.MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#424242' : '#e0e0e0'\n                          },\n                          '.MuiSelect-select': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '.MuiSvgIcon-root': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#616161' : '#e0e0e0'\n                          },\n                          '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#00aaff' : '#333333'\n                          }\n                        },\n                        MenuProps: {\n                          PaperProps: {\n                            sx: {\n                              bgcolor: darkMode ? '#121212' : '#ffffff',\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '& .MuiMenuItem-root': {\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '&:hover': {\n                                  bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                                },\n                                '&.Mui-selected': {\n                                  bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                                }\n                              }\n                            }\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"all\",\n                          children: \"All\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 438,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"Completed\",\n                          children: \"Completed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 6,\n                    md: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        display: 'block',\n                        mb: 0.5,\n                        fontWeight: 'medium',\n                        color: darkMode ? '#ffffff' : '#333333'\n                      },\n                      children: \"Difficulty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      size: \"small\",\n                      fullWidth: true,\n                      children: /*#__PURE__*/_jsxDEV(Select, {\n                        value: difficultyFilter,\n                        onChange: handleDifficultyChange,\n                        displayEmpty: true,\n                        sx: {\n                          bgcolor: darkMode ? '#121212' : '#ffffff',\n                          '.MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#424242' : '#e0e0e0'\n                          },\n                          '.MuiSelect-select': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '.MuiSvgIcon-root': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          },\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#616161' : '#e0e0e0'\n                          },\n                          '.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                            borderColor: darkMode ? '#00aaff' : '#333333'\n                          }\n                        },\n                        MenuProps: {\n                          PaperProps: {\n                            sx: {\n                              bgcolor: darkMode ? '#121212' : '#ffffff',\n                              color: darkMode ? '#ffffff' : '#333333',\n                              '& .MuiMenuItem-root': {\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '&:hover': {\n                                  bgcolor: darkMode ? '#424242' : '#f5f5f5'\n                                },\n                                '&.Mui-selected': {\n                                  bgcolor: darkMode ? '#424242' : '#e0e0e0'\n                                }\n                              }\n                            }\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"all\",\n                          children: \"All\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"Easy\",\n                          children: \"Easy\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"Medium\",\n                          children: \"Medium\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"Hard\",\n                          children: \"Hard\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 479,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 12,\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'flex-end',\n                      gap: 1,\n                      justifyContent: 'flex-end'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: showStarredOnly ? \"Show All\" : \"Show Starred Only\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: toggleStarredOnly,\n                        sx: {\n                          color: showStarredOnly ? darkMode ? '#ffd700' : '#f57c00' : darkMode ? '#bdbdbd' : '#757575',\n                          '&:hover': {\n                            color: darkMode ? '#ffd700' : '#f57c00'\n                          }\n                        },\n                        children: showStarredOnly ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 492,\n                          columnNumber: 46\n                        }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 492,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Reset Progress\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleOpenResetDialog,\n                        sx: {\n                          color: darkMode ? '#bdbdbd' : '#757575',\n                          '&:hover': {\n                            color: darkMode ? '#ffffff' : '#333333'\n                          }\n                        },\n                        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexShrink: 0,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: 2,\n                  width: {\n                    xs: '100%',\n                    md: '30%'\n                  },\n                  borderLeft: {\n                    xs: 'none',\n                    md: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`\n                  },\n                  pl: {\n                    xs: 0,\n                    md: 4\n                  },\n                  mt: {\n                    xs: 4,\n                    md: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  component: \"div\",\n                  sx: {\n                    fontWeight: 'bold',\n                    color: darkMode ? '#ffffff' : '#333333',\n                    textAlign: 'center',\n                    mb: 2\n                  },\n                  children: \"Overall Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexDirection: {\n                      xs: 'column',\n                      md: 'row'\n                    },\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gap: 4,\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'relative',\n                      display: 'inline-flex',\n                      flexShrink: 0\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                      variant: \"determinate\",\n                      value: overallProgress,\n                      size: 100,\n                      thickness: 6,\n                      sx: {\n                        color: '#4caf50',\n                        transition: 'stroke-dashoffset 0.3s ease 0s',\n                        '& .MuiCircularProgress-circle': {\n                          stroke: darkMode ? '#66bb6a' : '#66bb6a',\n                          strokeLinecap: 'round'\n                        },\n                        '& .MuiCircularProgress-circleDeterminate': {\n                          color: '#4caf50'\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        top: 0,\n                        left: 0,\n                        bottom: 0,\n                        right: 0,\n                        position: 'absolute',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        flexDirection: 'column'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h4\",\n                        component: \"div\",\n                        sx: {\n                          color: darkMode ? '#ffffff' : '#333333',\n                          fontWeight: 'bold',\n                          lineHeight: 1\n                        },\n                        children: [patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0), /*#__PURE__*/_jsxDEV(Box, {\n                          component: \"span\",\n                          sx: {\n                            fontSize: '0.7em',\n                            color: darkMode ? '#bdbdbd' : '#666666'\n                          },\n                          children: [\"/\", patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 572,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          color: darkMode ? '#bdbdbd' : '#666666'\n                        },\n                        children: \"Solved\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 576,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: 1,\n                    sx: {\n                      flexGrow: 1,\n                      maxWidth: 200\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        bgcolor: darkMode ? '#333333' : '#eeeeee',\n                        p: 1,\n                        borderRadius: 1,\n                        borderLeft: `4px solid #66bb6a`,\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          fontWeight: 'bold',\n                          color: '#66bb6a'\n                        },\n                        children: \"Easy\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        children: [difficultyProgress.easy.completed, \"/\", difficultyProgress.easy.total]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 585,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        bgcolor: darkMode ? '#333333' : '#eeeeee',\n                        p: 1,\n                        borderRadius: 1,\n                        borderLeft: `4px solid #ffa726`,\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          fontWeight: 'bold',\n                          color: '#ffa726'\n                        },\n                        children: \"Med.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        children: [difficultyProgress.medium.completed, \"/\", difficultyProgress.medium.total]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        bgcolor: darkMode ? '#333333' : '#eeeeee',\n                        p: 1,\n                        borderRadius: 1,\n                        borderLeft: `4px solid #ef5350`,\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          fontWeight: 'bold',\n                          color: '#ef5350'\n                        },\n                        children: \"Hard\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        sx: {\n                          color: darkMode ? '#ffffff' : '#333333'\n                        },\n                        children: [difficultyProgress.hard.completed, \"/\", difficultyProgress.hard.total]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 593,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%',\n                mt: 0\n              },\n              children: filteredPatterns.map(pattern => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 3,\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(PatternCard, {\n                  pattern: pattern,\n                  isStarred: starredPatterns.has(pattern.name),\n                  onToggleStar: () => toggleStarPattern(pattern.name),\n                  onQuestionStatusChange: handleQuestionStatusChange,\n                  onToggleStarQuestion: memoizedToggleStarQuestion,\n                  darkMode: darkMode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 21\n                }, this)\n              }, pattern.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: openResetDialog,\n              onClose: handleCloseResetDialog,\n              \"aria-labelledby\": \"reset-dialog-title\",\n              \"aria-describedby\": \"reset-dialog-description\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"reset-dialog-title\",\n                sx: {\n                  bgcolor: darkMode ? '#212121' : '#ffffff',\n                  color: darkMode ? '#ffffff' : '#333333'\n                },\n                children: \"Confirm Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                sx: {\n                  bgcolor: darkMode ? '#212121' : '#ffffff',\n                  color: darkMode ? '#e0e0e0' : '#333333'\n                },\n                children: \"Are you sure you want to reset your progress?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                sx: {\n                  bgcolor: darkMode ? '#212121' : '#ffffff'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleCloseResetDialog,\n                  sx: {\n                    color: darkMode ? '#bdbdbd' : '#666666'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleConfirmReset,\n                  color: \"error\",\n                  variant: \"contained\",\n                  autoFocus: true,\n                  children: \"Yes, Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xwNVGyq0jAL7CxAV+5AgUBaNnBc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Container","Typography","TextField","Box","Grid","AppBar","Toolbar","Select","MenuItem","FormControl","Link","IconButton","CircularProgress","Tooltip","Dialog","DialogTitle","DialogContent","DialogActions","Button","Card","GitHubIcon","MenuIcon","SearchIcon","StarBorderIcon","StarIcon","RefreshIcon","DarkModeOutlinedIcon","WbSunnyOutlinedIcon","motion","patterns","initialPatterns","PatternCard","Author","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","DARK_MODE_STORAGE_KEY","App","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","JSON","parse","setPatterns","savedPatterns","searchTerm","setSearchTerm","difficultyFilter","setDifficultyFilter","statusFilter","setStatusFilter","patternFilter","setPatternFilter","patternSearchTerm","setPatternSearchTerm","showStarredOnly","setShowStarredOnly","starredPatterns","setStarredPatterns","Set","overallProgress","setOverallProgress","difficultyProgress","setDifficultyProgress","easy","completed","total","percentage","medium","hard","openResetDialog","setOpenResetDialog","setItem","stringify","totalQuestions","completedQuestions","easyCompleted","easyTotal","mediumCompleted","mediumTotal","hardCompleted","hardTotal","forEach","pattern","questions","length","filter","q","status","question","difficulty","handleSearchChange","event","target","value","handleDifficultyChange","handleStatusChange","handlePatternSearchChange","handlePatternChange","toggleStarredOnly","prev","toggleStarPattern","patternName","newSet","has","delete","add","handleQuestionStatusChange","useCallback","questionName","newStatus","prevPatterns","map","name","updatedQuestions","progress","toggleStarQuestion","starred","filteredPatterns","matchesPattern","questionsMatchFilters","matchesSearch","toLowerCase","includes","matchesDifficulty","matchesStatus","matchesStarred","memoizedToggleStarQuestion","handleOpenResetDialog","handleCloseResetDialog","handleConfirmReset","resetPatterns","toggleDarkMode","filteredPatternOptions","children","sx","flexGrow","bgcolor","minHeight","color","position","boxShadow","zIndex","variant","component","fontWeight","letterSpacing","mr","fileName","_jsxFileName","lineNumber","columnNumber","display","xs","md","alignItems","gap","href","underline","div","initial","opacity","rotate","animate","transition","duration","ease","onClick","style","cursor","marginRight","fontSize","path","element","maxWidth","mt","mb","px","sm","elevation","p","borderRadius","width","flexDirection","pr","container","spacing","item","size","placeholder","onChange","fullWidth","InputProps","startAdornment","borderColor","input","label","InputLabelProps","displayEmpty","MenuProps","PaperProps","maxHeight","top","borderBottom","e","stopPropagation","borderTop","my","justifyContent","title","flexShrink","borderLeft","pl","textAlign","thickness","stroke","strokeLinecap","left","bottom","right","lineHeight","reduce","sum","isStarred","onToggleStar","onQuestionStatusChange","onToggleStarQuestion","open","onClose","id","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Box,\n  Grid,\n  AppBar,\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  SelectChangeEvent,\n  Link,\n  IconButton,\n  LinearProgress,\n  Switch,\n  FormControlLabel,\n  CircularProgress,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Card\n} from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport WbSunnyOutlinedIcon from '@mui/icons-material/WbSunnyOutlined';\nimport { motion } from 'framer-motion';\n\nimport { patterns as initialPatterns, Pattern, Question } from './data/patterns';\nimport PatternCard from './components/PatternCard';\nimport Author from './pages/Author';\n\nconst LOCAL_STORAGE_KEY = 'dsaPatternsProgress';\nconst DARK_MODE_STORAGE_KEY = 'darkModePreference';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem(DARK_MODE_STORAGE_KEY);\n    if (savedMode !== null) {\n      return JSON.parse(savedMode);\n    }\n    return true;\n  });\n  const [patterns, setPatterns] = useState<Pattern[]>(() => {\n    const savedPatterns = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return savedPatterns ? JSON.parse(savedPatterns) : initialPatterns;\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [difficultyFilter, setDifficultyFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [patternFilter, setPatternFilter] = useState<string>('all');\n  const [patternSearchTerm, setPatternSearchTerm] = useState('');\n  const [showStarredOnly, setShowStarredOnly] = useState(false);\n  const [starredPatterns, setStarredPatterns] = useState<Set<string>>(new Set());\n  const [overallProgress, setOverallProgress] = useState(0);\n  const [difficultyProgress, setDifficultyProgress] = useState({\n    easy: { completed: 0, total: 0, percentage: 0 },\n    medium: { completed: 0, total: 0, percentage: 0 },\n    hard: { completed: 0, total: 0, percentage: 0 },\n  });\n  const [openResetDialog, setOpenResetDialog] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(patterns));\n    localStorage.setItem(DARK_MODE_STORAGE_KEY, JSON.stringify(darkMode));\n    let totalQuestions = 0;\n    let completedQuestions = 0;\n    let easyCompleted = 0, easyTotal = 0;\n    let mediumCompleted = 0, mediumTotal = 0;\n    let hardCompleted = 0, hardTotal = 0;\n\n    patterns.forEach(pattern => {\n      totalQuestions += pattern.questions.length;\n      completedQuestions += pattern.questions.filter(q => q.status === 'Completed').length;\n\n      pattern.questions.forEach(question => {\n        if (question.difficulty === 'Easy') {\n          easyTotal++;\n          if (question.status === 'Completed') easyCompleted++;\n        } else if (question.difficulty === 'Medium') {\n          mediumTotal++;\n          if (question.status === 'Completed') mediumCompleted++;\n        } else if (question.difficulty === 'Hard') {\n          hardTotal++;\n          if (question.status === 'Completed') hardCompleted++;\n        }\n      });\n    });\n\n    setOverallProgress(totalQuestions === 0 ? 0 : (completedQuestions / totalQuestions) * 100);\n    setDifficultyProgress({\n      easy: { completed: easyCompleted, total: easyTotal, percentage: easyTotal === 0 ? 0 : (easyCompleted / easyTotal) * 100 },\n      medium: { completed: mediumCompleted, total: mediumTotal, percentage: mediumTotal === 0 ? 0 : (mediumCompleted / mediumTotal) * 100 },\n      hard: { completed: hardCompleted, total: hardTotal, percentage: hardTotal === 0 ? 0 : (hardCompleted / hardTotal) * 100 },\n    });\n  }, [patterns, darkMode]);\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleDifficultyChange = (event: SelectChangeEvent) => {\n    setDifficultyFilter(event.target.value);\n  };\n\n  const handleStatusChange = (event: SelectChangeEvent) => {\n    setStatusFilter(event.target.value);\n  };\n\n  const handlePatternSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPatternSearchTerm(event.target.value);\n  };\n\n  const handlePatternChange = (event: SelectChangeEvent) => {\n    setPatternFilter(event.target.value);\n  };\n\n  const toggleStarredOnly = () => {\n    setShowStarredOnly(prev => !prev);\n  };\n\n  const toggleStarPattern = (patternName: string) => {\n    setStarredPatterns(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(patternName)) {\n        newSet.delete(patternName);\n      } else {\n        newSet.add(patternName);\n      }\n      return newSet;\n    });\n  };\n\n  const handleQuestionStatusChange = React.useCallback((patternName: string, questionName: string, newStatus: Question['status']) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, status: newStatus };\n            }\n            return question;\n          });\n          \n          // Calculate new progress\n          const completedQuestions = updatedQuestions.filter(q => q.status === 'Completed').length;\n          return { \n            ...pattern, \n            questions: updatedQuestions,\n            progress: {\n              completed: completedQuestions,\n              total: updatedQuestions.length\n            }\n          };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const toggleStarQuestion = (patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  };\n\n  const filteredPatterns = patterns.filter(pattern => {\n    const matchesPattern = patternFilter === 'all' || pattern.name === patternFilter;\n\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n\n    return matchesPattern && questionsMatchFilters.length > 0;\n  }).map(pattern => {\n    const questionsMatchFilters = pattern.questions.filter(question => {\n      const matchesSearch = searchTerm === '' || question.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesDifficulty = difficultyFilter === 'all' || question.difficulty === difficultyFilter;\n      const matchesStatus = statusFilter === 'all' || question.status === statusFilter;\n      const matchesStarred = !showStarredOnly || question.starred;\n      return matchesSearch && matchesDifficulty && matchesStatus && matchesStarred;\n    });\n    return { ...pattern, questions: questionsMatchFilters };\n  });\n\n  const memoizedToggleStarQuestion = React.useCallback((patternName: string, questionName: string) => {\n    setPatterns(prevPatterns => {\n      return prevPatterns.map(pattern => {\n        if (pattern.name === patternName) {\n          const updatedQuestions = pattern.questions.map(question => {\n            if (question.name === questionName) {\n              return { ...question, starred: !question.starred };\n            }\n            return question;\n          });\n          return { ...pattern, questions: updatedQuestions };\n        }\n        return pattern;\n      });\n    });\n  }, []);\n\n  const handleOpenResetDialog = () => {\n    setOpenResetDialog(true);\n  };\n\n  const handleCloseResetDialog = () => {\n    setOpenResetDialog(false);\n  };\n\n  const handleConfirmReset = () => {\n    setSearchTerm('');\n    setDifficultyFilter('all');\n    setStatusFilter('all');\n    setPatternFilter('all');\n    setShowStarredOnly(false);\n    setStarredPatterns(new Set());\n\n    const resetPatterns = initialPatterns.map(pattern => ({\n      ...pattern,\n      questions: pattern.questions.map(question => ({\n        ...question,\n        status: 'Not Started' as Question['status'],\n        starred: false,\n      })),\n      progress: { completed: 0, total: pattern.questions.length }\n    }));\n    setPatterns(resetPatterns);\n\n    handleCloseResetDialog();\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const filteredPatternOptions = initialPatterns.filter(pattern => \n    pattern.name.toLowerCase().includes(patternSearchTerm.toLowerCase())\n  );\n\n  return (\n    <Router>\n      <Box sx={{ \n        flexGrow: 1, \n        bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5', \n        minHeight: '100vh', \n        color: darkMode ? '#e0e0e0' : '#333333' \n      }}>\n        <AppBar position=\"sticky\" sx={{ bgcolor: darkMode ? '#262626' : '#ffffff', boxShadow: 3, zIndex: 1100 }}>\n          <Toolbar>\n            <Typography \n              variant=\"h6\" \n              component=\"div\" \n              sx={{ \n                flexGrow: 0, \n                fontWeight: 'bold', \n                color: darkMode ? '#ffffff' : '#333333', \n                letterSpacing: '0.1em',\n                mr: 4\n              }}>\n              Pre<Box component=\"span\" sx={{ color: '#00aaff' }}>Monster</Box>\n            </Typography>\n\n            <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center', mr: 3, gap: 3 }}>\n              <Link href=\"/author\" color=\"inherit\" underline=\"none\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', fontWeight: 'medium', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}>Author</Link>\n              <Link href=\"/companies\" color=\"inherit\" underline=\"none\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', fontWeight: 'medium', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}>Company</Link>\n            </Box>\n\n            <Box sx={{ flexGrow: 1 }} />\n            \n            <motion.div\n              key={darkMode ? 'dark' : 'light'}\n              initial={{ opacity: 0, rotate: darkMode ? -90 : 90 }}\n              animate={{ opacity: 1, rotate: 0 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              onClick={toggleDarkMode}\n              style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', marginRight: '16px' }}\n            >\n              {darkMode ? (\n                <DarkModeOutlinedIcon sx={{ color: '#90caf9' }} fontSize=\"small\" />\n              ) : (\n                <WbSunnyOutlinedIcon sx={{ color: '#f57c00' }} fontSize=\"small\" />\n              )}\n            </motion.div>\n\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>\n              <IconButton color=\"inherit\" href=\"#\" target=\"_blank\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><GitHubIcon fontSize=\"small\"/></IconButton>\n              <IconButton color=\"inherit\" sx={{ display: { xs: 'block', md: 'none' }, color: darkMode ? '#bdbdbd' : '#666666', '&:hover': { color: darkMode ? '#ffffff' : '#333333' } }}><MenuIcon fontSize=\"small\"/></IconButton>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Routes>\n          <Route path=\"/author\" element={<Author darkMode={darkMode} />} />\n          <Route path=\"/companies\" element={<div>Company List Page Placeholder</div>} />\n          <Route path=\"/companies/:companyName\" element={<div>Company Questions Page Placeholder</div>} />\n          <Route path=\"/\" element={\n            <Container maxWidth={false} sx={{ mt: 4, mb: 4, px: { xs: 2, sm: 3, md: 4 } }}>\n              <Card\n                elevation={3}\n                sx={{\n                  p: 3,\n                  bgcolor: darkMode ? '#212121' : '#ffffff',\n                  borderRadius: 2,\n                  boxShadow: 3,\n                  mb: 4,\n                  width: '97%',\n                  display: 'flex',\n                  flexDirection: { xs: 'column', md: 'row' },\n                  alignItems: 'flex-start',\n                  gap: { xs: 1, md: 1 }\n                }}\n              >\n                <Box sx={{ flexGrow: 1, width: { xs: '100%', md: 'auto' }, pr: { md: 12 } }}>\n                  <Typography variant=\"h6\" component=\"div\" sx={{ mb: 2, fontWeight: 'bold', color: darkMode ? '#ffffff' : '#333333' }}>Filters</Typography>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12} md={4}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Search</Typography>\n                      <TextField\n                        size=\"small\"\n                        placeholder=\"Search problems...\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        fullWidth\n                        InputProps={{ startAdornment: (<SearchIcon sx={{ color: darkMode ? '#ffffff' : '#333333', mr: 1 }} />) }}\n                        sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, input: { color: darkMode ? '#ffffff' : '#333333' }, label: { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }}\n                        InputLabelProps={{ style: { color: darkMode ? '#ffffff' : '#333333' } }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Pattern</Typography>\n                      <FormControl size=\"small\" fullWidth>\n                        <Select\n                          value={patternFilter}\n                          onChange={handlePatternChange}\n                          displayEmpty\n                          sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }}\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                bgcolor: darkMode ? '#121212' : '#ffffff',\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '& .MuiMenuItem-root': {\n                                  color: darkMode ? '#ffffff' : '#333333',\n                                  '&:hover': {\n                                    bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                  },\n                                  '&.Mui-selected': {\n                                    bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                  },\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <Box sx={{ position: 'sticky', top: 0, bgcolor: darkMode ? '#121212' : '#ffffff', borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`, p: 1, zIndex: 1 }}>\n                            <TextField\n                              size=\"small\"\n                              placeholder=\"Search patterns...\"\n                              value={patternSearchTerm}\n                              onChange={handlePatternSearchChange}\n                              fullWidth\n                              onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                              sx={{ bgcolor: darkMode ? '#121212' : '#ffffff', '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, input: { color: darkMode ? '#ffffff' : '#333333' }, '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } }}\n                            />\n                          </Box>\n                          <MenuItem value=\"all\">All Patterns</MenuItem>\n                          <Box sx={{ borderTop: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`, borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`, my: 1 }} />\n                          {filteredPatternOptions.map(pattern => (\n                            <MenuItem key={pattern.name} value={pattern.name}>{pattern.name}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Status</Typography>\n                      <FormControl size=\"small\" fullWidth>\n                        <Select \n                          value={statusFilter} \n                          onChange={handleStatusChange} \n                          displayEmpty \n                          sx={{ \n                            bgcolor: darkMode ? '#121212' : '#ffffff', \n                            '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                            '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, \n                            '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, \n                            '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, \n                            '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } \n                          }}\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                bgcolor: darkMode ? '#121212' : '#ffffff',\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '& .MuiMenuItem-root': {\n                                  color: darkMode ? '#ffffff' : '#333333',\n                                  '&:hover': {\n                                    bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                  },\n                                  '&.Mui-selected': {\n                                    bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                  },\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <MenuItem value=\"all\">All</MenuItem>\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={4}>\n                      <Typography variant=\"caption\" sx={{ display: 'block', mb: 0.5, fontWeight: 'medium', color: darkMode ? '#ffffff' : '#333333' }}>Difficulty</Typography>\n                      <FormControl size=\"small\" fullWidth>\n                        <Select \n                          value={difficultyFilter} \n                          onChange={handleDifficultyChange} \n                          displayEmpty \n                          sx={{ \n                            bgcolor: darkMode ? '#121212' : '#ffffff', \n                            '.MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#424242' : '#e0e0e0' }, \n                            '.MuiSelect-select': { color: darkMode ? '#ffffff' : '#333333' }, \n                            '.MuiSvgIcon-root': { color: darkMode ? '#ffffff' : '#333333' }, \n                            '&:hover .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#616161' : '#e0e0e0' }, \n                            '.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: darkMode ? '#00aaff' : '#333333' } \n                          }}\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                bgcolor: darkMode ? '#121212' : '#ffffff',\n                                color: darkMode ? '#ffffff' : '#333333',\n                                '& .MuiMenuItem-root': {\n                                  color: darkMode ? '#ffffff' : '#333333',\n                                  '&:hover': {\n                                    bgcolor: darkMode ? '#424242' : '#f5f5f5',\n                                  },\n                                  '&.Mui-selected': {\n                                    bgcolor: darkMode ? '#424242' : '#e0e0e0',\n                                  },\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <MenuItem value=\"all\">All</MenuItem>\n                          <MenuItem value=\"Easy\">Easy</MenuItem>\n                          <MenuItem value=\"Medium\">Medium</MenuItem>\n                          <MenuItem value=\"Hard\">Hard</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} sx={{ display: 'flex', alignItems: 'flex-end', gap: 1, justifyContent: 'flex-end' }}>\n                      <Tooltip title={showStarredOnly ? \"Show All\" : \"Show Starred Only\"}>\n                        <IconButton\n                          onClick={toggleStarredOnly}\n                          sx={{ \n                            color: showStarredOnly ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\n                            '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\n                          }}\n                        >\n                          {showStarredOnly ? <StarIcon /> : <StarBorderIcon />}\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Reset Progress\">\n                        <IconButton\n                          onClick={handleOpenResetDialog}\n                          sx={{ color: darkMode ? '#bdbdbd' : '#757575', '&:hover': { color: darkMode ? '#ffffff' : '#333333'} }}\n                        >\n                          <RefreshIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </Grid>\n                  </Grid>\n                </Box>\n\n                <Box sx={{ \n                  flexShrink: 0, \n                  display: 'flex', \n                  flexDirection: 'column', \n                  alignItems: 'center', \n                  gap: 2, \n                  width: { xs: '100%', md: '30%' }, \n                  borderLeft: { xs: 'none', md: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}` }, \n                  pl: { xs: 0, md: 4 },\n                  mt: { xs: 4, md: 0 }\n                }}>\n                  <Typography \n                    variant=\"h6\" \n                    component=\"div\" \n                    sx={{ \n                      fontWeight: 'bold', \n                      color: darkMode ? '#ffffff' : '#333333', \n                      textAlign: 'center',\n                      mb: 2\n                    }}\n                  >\n                    Overall Progress\n                  </Typography>\n\n                  <Box sx={{ \n                    display: 'flex', \n                    flexDirection: { xs: 'column', md: 'row' }, \n                    justifyContent: 'center', \n                    alignItems: 'center', \n                    gap: 4, \n                    width: '100%' \n                  }}>\n                    <Box sx={{ position: 'relative', display: 'inline-flex', flexShrink: 0 }}>\n                      <CircularProgress\n                        variant=\"determinate\"\n                        value={overallProgress}\n                        size={100}\n                        thickness={6}\n                        sx={{\n                          color: '#4caf50',\n                          transition: 'stroke-dashoffset 0.3s ease 0s',\n                          '& .MuiCircularProgress-circle': {\n                            stroke: darkMode ? '#66bb6a' : '#66bb6a',\n                            strokeLinecap: 'round',\n                          },\n                          '& .MuiCircularProgress-circleDeterminate': {\n                            color: '#4caf50'\n                          }\n                        }}\n                      />\n                      <Box\n                        sx={{\n                          top: 0,\n                          left: 0,\n                          bottom: 0,\n                          right: 0,\n                          position: 'absolute',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          flexDirection: 'column',\n                        }}\n                      >\n                        <Typography variant=\"h4\" component=\"div\" sx={{ color: darkMode ? '#ffffff' : '#333333', fontWeight: 'bold', lineHeight: 1 }}>\n                          {patterns.reduce((sum, pattern) => sum + pattern.questions.filter(q => q.status === 'Completed').length, 0)}\n                          <Box component=\"span\" sx={{ fontSize: '0.7em', color: darkMode ? '#bdbdbd' : '#666666' }}>\n                            /{patterns.reduce((sum, pattern) => sum + pattern.questions.length, 0)}\n                          </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\n                          Solved\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box display=\"flex\" flexDirection=\"column\" gap={1} sx={{ flexGrow: 1, maxWidth: 200 }}>\n                      <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #66bb6a`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#66bb6a' }}>Easy</Typography>\n                        <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.easy.completed}/{difficultyProgress.easy.total}</Typography>\n                      </Box>\n                      <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #ffa726`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#ffa726' }}>Med.</Typography>\n                        <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.medium.completed}/{difficultyProgress.medium.total}</Typography>\n                      </Box>\n                      <Box sx={{ bgcolor: darkMode ? '#333333' : '#eeeeee', p: 1, borderRadius: 1, borderLeft: `4px solid #ef5350`, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: '#ef5350' }}>Hard</Typography>\n                        <Typography variant=\"body2\" sx={{ color: darkMode ? '#ffffff' : '#333333' }}>{difficultyProgress.hard.completed}/{difficultyProgress.hard.total}</Typography>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              </Card>\n\n              <Box sx={{ width: '100%', mt: 0 }}>\n                {filteredPatterns.map((pattern) => (\n                  <Box key={pattern.name} sx={{ mb: 3, width: '100%' }}>\n                    <PatternCard\n                      pattern={pattern}\n                      isStarred={starredPatterns.has(pattern.name)}\n                      onToggleStar={() => toggleStarPattern(pattern.name)}\n                      onQuestionStatusChange={handleQuestionStatusChange}\n                      onToggleStarQuestion={memoizedToggleStarQuestion}\n                      darkMode={darkMode}\n                    />\n                  </Box>\n                ))}\n              </Box>\n\n              <Dialog\n                open={openResetDialog}\n                onClose={handleCloseResetDialog}\n                aria-labelledby=\"reset-dialog-title\"\n                aria-describedby=\"reset-dialog-description\"\n              >\n                <DialogTitle id=\"reset-dialog-title\" sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#ffffff' : '#333333' }}>\n                  Confirm Reset\n                </DialogTitle>\n                <DialogContent sx={{ bgcolor: darkMode ? '#212121' : '#ffffff', color: darkMode ? '#e0e0e0' : '#333333' }}>\n                  Are you sure you want to reset your progress?\n                </DialogContent>\n                <DialogActions sx={{ bgcolor: darkMode ? '#212121' : '#ffffff' }}>\n                  <Button onClick={handleCloseResetDialog} sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>Cancel</Button>\n                  <Button onClick={handleConfirmReset} color=\"error\" variant=\"contained\" autoFocus>Yes, Reset</Button>\n                </DialogActions>\n              </Dialog>\n            </Container>\n          } />\n        </Routes>\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}