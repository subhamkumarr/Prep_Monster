{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\components\\\\PatternCard.tsx\";\nimport React from 'react';\nimport { Card, Typography, LinearProgress, Box, IconButton, Link, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDifficultyColor = difficulty => {\n  switch (difficulty) {\n    case 'Easy':\n      return '#4caf50';\n    case 'Medium':\n      return '#ff9800';\n    case 'Hard':\n      return '#f44336';\n    default:\n      return '#757575';\n  }\n};\n\n// Function to highlight text\nconst highlightText = (text, searchTerm) => {\n  if (!searchTerm) {\n    return text;\n  }\n  const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: parts.map((part, index) => part.toLowerCase() === searchTerm.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: 'yellow',\n        color: 'black'\n      },\n      children: part\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this) : part)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\nconst PatternCard = ({\n  pattern,\n  isStarred,\n  onToggleStar,\n  onQuestionStatusChange,\n  onToggleStarQuestion,\n  darkMode,\n  searchTerm\n}) => {\n  const completedQuestions = pattern.questions.filter(q => q.status === 'Completed').length;\n  const progress = completedQuestions / pattern.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 3,\n    sx: {\n      bgcolor: darkMode ? '#212121' : '#ffffff',\n      borderRadius: 2,\n      boxShadow: 3,\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            fontWeight: 'bold',\n            color: darkMode ? '#ffffff' : '#333333',\n            textAlign: 'center'\n          },\n          children: pattern.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: darkMode ? '#bdbdbd' : '#666666'\n          },\n          children: [\"Progress: \", completedQuestions, \"/\", pattern.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: darkMode ? '#bdbdbd' : '#666666'\n          },\n          children: [\"(\", Math.round(progress), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        sx: {\n          height: 8,\n          borderRadius: 4,\n          bgcolor: darkMode ? '#424242' : '#e0e0e0',\n          '& .MuiLinearProgress-bar': {\n            bgcolor: '#4caf50',\n            borderRadius: 4\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold',\n                width: '10%'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold',\n                width: '40%'\n              },\n              children: \"Problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold',\n                width: '15%'\n              },\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold',\n                width: '20%'\n              },\n              children: \"Solution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold',\n                width: '15%'\n              },\n              children: \"Star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pattern.questions.map(question => {\n            var _question$solution;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: '10%'\n                },\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => onQuestionStatusChange(pattern.name, question.name, question.status === 'Completed' ? 'Not Started' : 'Completed'),\n                  sx: {\n                    color: question.status === 'Completed' ? '#4caf50' : darkMode ? '#bdbdbd' : '#757575',\n                    '&:hover': {\n                      color: '#4caf50'\n                    },\n                    '& .MuiSvgIcon-root': {\n                      fontSize: '1.5rem'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AssignmentTurnedInOutlinedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: '40%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: question.url || '#',\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  sx: {\n                    color: darkMode ? '#90caf9' : '#0288d1',\n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: 'inherit'\n                    },\n                    children: highlightText(question.name, searchTerm)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: '15%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: question.difficulty,\n                  size: \"small\",\n                  sx: {\n                    bgcolor: getDifficultyColor(question.difficulty),\n                    color: '#ffffff',\n                    fontWeight: 'bold',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: '20%'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    alignItems: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    href: ((_question$solution = question.solution) === null || _question$solution === void 0 ? void 0 : _question$solution.github) || '#' // Use dummy link or actual if exists\n                    ,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    sx: {\n                      color: darkMode ? '#bdbdbd' : '#666666',\n                      display: 'flex',\n                      alignItems: 'center',\n                      '&:hover': {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(GitHubIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  width: '15%'\n                },\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => onToggleStarQuestion(pattern.name, question.name),\n                  sx: {\n                    color: question.starred ? darkMode ? '#ffd700' : '#f57c00' : darkMode ? '#bdbdbd' : '#757575',\n                    '&:hover': {\n                      color: darkMode ? '#ffd700' : '#f57c00'\n                    }\n                  },\n                  children: question.starred ? /*#__PURE__*/_jsxDEV(StarIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 43\n                  }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 75\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, question.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = PatternCard;\nexport default PatternCard;\nvar _c;\n$RefreshReg$(_c, \"PatternCard\");","map":{"version":3,"names":["React","Card","Typography","LinearProgress","Box","IconButton","Link","Chip","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","StarIcon","StarBorderIcon","AssignmentTurnedInOutlinedIcon","GitHubIcon","jsxDEV","_jsxDEV","getDifficultyColor","difficulty","highlightText","text","searchTerm","parts","split","RegExp","children","map","part","index","toLowerCase","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","PatternCard","pattern","isStarred","onToggleStar","onQuestionStatusChange","onToggleStarQuestion","darkMode","completedQuestions","questions","filter","q","status","length","progress","elevation","sx","bgcolor","borderRadius","boxShadow","overflow","p","borderBottom","display","justifyContent","alignItems","mb","variant","component","flexGrow","fontWeight","textAlign","name","gap","Math","round","value","height","size","width","question","_question$solution","onClick","fontSize","href","url","target","rel","textDecoration","label","solution","github","starred","_c","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/components/PatternCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, Typography, LinearProgress, Box, IconButton, Link, List, ListItem, ListItemText, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Pattern, Question } from '../data/patterns';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport { motion } from 'framer-motion';\n\ninterface PatternCardProps {\n  pattern: Pattern;\n  isStarred: boolean;\n  onToggleStar: () => void;\n  onQuestionStatusChange: (patternName: string, questionName: string, newStatus: Question['status']) => void;\n  onToggleStarQuestion: (patternName: string, questionName: string) => void;\n  darkMode: boolean;\n  searchTerm: string;\n}\n\nconst getDifficultyColor = (difficulty: string) => {\n  switch (difficulty) {\n    case 'Easy': return '#4caf50';\n    case 'Medium': return '#ff9800';\n    case 'Hard': return '#f44336';\n    default: return '#757575';\n  }\n};\n\n// Function to highlight text\nconst highlightText = (text: string, searchTerm: string) => {\n  if (!searchTerm) {\n    return text;\n  }\n  const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n  return (\n    <span>\n      {parts.map((part, index) =>\n        part.toLowerCase() === searchTerm.toLowerCase() ? (\n          <span key={index} style={{ backgroundColor: 'yellow', color: 'black' }}>\n            {part}\n          </span>\n        ) : (\n          part\n        )\n      )}\n    </span>\n  );\n};\n\nconst PatternCard: React.FC<PatternCardProps> = ({\n  pattern,\n  isStarred,\n  onToggleStar,\n  onQuestionStatusChange,\n  onToggleStarQuestion,\n  darkMode,\n  searchTerm\n}) => {\n  const completedQuestions = pattern.questions.filter(q => q.status === 'Completed').length;\n  const progress = (completedQuestions / pattern.questions.length) * 100;\n\n  return (\n    <Card\n      elevation={3}\n      sx={{\n        bgcolor: darkMode ? '#212121' : '#ffffff',\n        borderRadius: 2,\n        boxShadow: 3,\n        overflow: 'hidden'\n      }}\n    >\n      <Box sx={{ p: 2, borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}` }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n          <Typography \n            variant=\"h6\" \n            component=\"div\" \n            sx={{\n              flexGrow: 1,\n              fontWeight: 'bold',\n              color: darkMode ? '#ffffff' : '#333333',\n              textAlign: 'center'\n            }}\n          >\n            {pattern.name}\n          </Typography>\n          {/* <IconButton\n            onClick={onToggleStar}\n            sx={{ \n              color: isStarred ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\n              '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\n            }}\n          >\n            {isStarred ? <StarIcon /> : <StarBorderIcon />}\n          </IconButton> */}\n        </Box>\n        {/* <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', mb: 2 }}>\n          {pattern.name}\n        </Typography> */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n          <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\n            Progress: {completedQuestions}/{pattern.questions.length}\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\n            ({Math.round(progress)}%)\n          </Typography>\n        </Box>\n        <LinearProgress\n          variant=\"determinate\"\n          value={progress}\n          sx={{\n            height: 8,\n            borderRadius: 4,\n            bgcolor: darkMode ? '#424242' : '#e0e0e0',\n            '& .MuiLinearProgress-bar': {\n              bgcolor: '#4caf50',\n              borderRadius: 4\n            }\n          }}\n        />\n      </Box>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow sx={{ bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5' }}>\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold', width: '10%' }}>Status</TableCell>\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold', width: '40%' }}>Problem</TableCell>\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold', width: '15%' }}>Difficulty</TableCell>\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold', width: '20%' }}>Solution</TableCell>\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold', width: '15%' }}>Star</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pattern.questions.map((question) => (\n              <TableRow key={question.name}>\n                <TableCell sx={{ width: '10%' }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => onQuestionStatusChange(pattern.name, question.name, \n                        question.status === 'Completed' ? 'Not Started' : 'Completed'\n                      )}\n                      sx={{\n                        color: question.status === 'Completed' ? '#4caf50' : (darkMode ? '#bdbdbd' : '#757575'),\n                        '&:hover': { color: '#4caf50' },\n                        '& .MuiSvgIcon-root': {\n                          fontSize: '1.5rem'\n                        }\n                      }}\n                    >\n                      <AssignmentTurnedInOutlinedIcon />\n                    </IconButton>\n                </TableCell>\n                <TableCell sx={{ width: '40%' }}>\n                  <Link\n                    href={question.url || '#'}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    sx={{ color: darkMode ? '#90caf9' : '#0288d1', textDecoration: 'none', '&:hover': { textDecoration: 'underline' } }}\n                  >\n                    <Typography variant=\"body2\" sx={{ color: 'inherit' }}>\n                      {highlightText(question.name, searchTerm)}\n                    </Typography>\n                    {/* Optional: Add LaunchIcon next to problem name if needed */}\n                    {/* <LaunchIcon sx={{ fontSize: '0.8em', ml: 0.5 }} /> */}\n                  </Link>\n                </TableCell>\n                <TableCell sx={{ width: '15%' }}>\n                  <Chip\n                    label={question.difficulty}\n                    size=\"small\"\n                    sx={{\n                      bgcolor: getDifficultyColor(question.difficulty),\n                      color: '#ffffff',\n                      fontWeight: 'bold',\n                      height: '20px'\n                    }}\n                  />\n                </TableCell>\n                <TableCell sx={{ width: '20%' }}>\n                  <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n                    {/* GitHub Icon Link */}\n                    <Link\n                      href={question.solution?.github || '#'} // Use dummy link or actual if exists\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      sx={{\n                        color: darkMode ? '#bdbdbd' : '#666666',\n                        display: 'flex',\n                        alignItems: 'center',\n                        '&:hover': { color: darkMode ? '#ffffff' : '#333333' }\n                      }}\n                    >\n                      <GitHubIcon fontSize=\"small\" />\n                    </Link>\n\n                    {/* YouTube Icon Link (optional, based on your data) */}\n                    {/* {question.solution?.youtube && (\n                       <Link\n                        href={question.solution.youtube || '#'}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        sx={{\n                          color: darkMode ? '#bdbdbd' : '#666666',\n                          display: 'flex',\n                          alignItems: 'center',\n                          '&:hover': { color: darkMode ? '#ffffff' : '#333333' }\n                        }}\n                      >\n                        <YouTubeIcon fontSize=\"small\" />\n                      </Link>\n                    )} */}\n                  </Box>\n                </TableCell>\n                <TableCell sx={{ width: '15%' }}>\n                   <IconButton\n                      size=\"small\"\n                      onClick={() => onToggleStarQuestion(pattern.name, question.name)}\n                      sx={{\n                        color: question.starred ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\n                        '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\n                      }}\n                    >\n                      {question.starred ? <StarIcon fontSize=\"small\" /> : <StarBorderIcon fontSize=\"small\" />}\n                    </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Card>\n  );\n};\n\nexport default PatternCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}