{"ast":null,"code":"export const patterns=[{name:'Arrays',progress:{completed:5,total:5},questions:[{name:'Move Zeroes',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Majority Element',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Product of Array Except Self',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Best Time to Buy and Sell Stock II',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'First Missing Positive',difficulty:'Hard',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Strings',progress:{completed:3,total:3},questions:[{name:'Is Subsequence',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Valid Palindrome',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Reverse Words in a String',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Bit Manipulation',progress:{completed:3,total:3},questions:[{name:'Single Number',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Counting Bits',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Single Number III',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Hash Tables',progress:{completed:4,total:5},questions:[{name:'Isomorphic Strings',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Contains Duplicate II',difficulty:'Easy',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Group Anagrams',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Encode and Decode TinyURL',difficulty:'Medium',status:'Completed',url:'#',solution:{github:'#',youtube:'#'}},{name:'Longest Consecutive Sequence',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Two Pointers',progress:{completed:0,total:4},questions:[{name:'Two Sum II - Input Array Is Sorted',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Container With Most Water',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'3Sum',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Trapping Rain Water',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Prefix Sum',progress:{completed:0,total:3},questions:[{name:'Range Sum Query - Immutable',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Subarray Sum Equals K',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Contiguous Array',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Sliding Window - Fixed Size',progress:{completed:0,total:2},questions:[{name:'Find All Anagrams in a String',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Permutation in String',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Sliding Window - Dynamic Size',progress:{completed:0,total:2},questions:[{name:'Longest Substring Without Repeating Characters',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Minimum Window Substring',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Kadane\\'s Algorithm',progress:{completed:0,total:2},questions:[{name:'Maximum Subarray',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Maximum Product Subarray',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Matrix (2D Array)',progress:{completed:0,total:3},questions:[{name:'Spiral Matrix',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Rotate Image',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Set Matrix Zeroes',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Linked List',progress:{completed:0,total:5},questions:[{name:'Intersection of Two Linked Lists',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Remove Nth Node From End of List',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Swap Nodes in Pairs',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Rotate List',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Add Two Numbers',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'LinkedList In-place Reversal',progress:{completed:0,total:2},questions:[{name:'Reverse Linked List',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Reverse Nodes in k-Group',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Fast and Slow Pointers',progress:{completed:0,total:2},questions:[{name:'Middle of the Linked List',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Linked List Cycle II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Stacks',progress:{completed:0,total:4},questions:[{name:'Valid Parentheses',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Min Stack',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Remove Duplicate Letters',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Longest Valid Parentheses',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Monotonic Stack',progress:{completed:0,total:2},questions:[{name:'Daily Temperatures',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Largest Rectangle in Histogram',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Monotonic Queue',progress:{completed:0,total:1},questions:[{name:'Sliding Window Maximum',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Bucket Sort',progress:{completed:0,total:1},questions:[{name:'Top K Frequent Words',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Recursion',progress:{completed:0,total:2},questions:[{name:'Merge Two Sorted Lists',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Decode String',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Divide and Conquer',progress:{completed:0,total:1},questions:[{name:'Convert Sorted List to Binary Search Tree',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Merge Sort',progress:{completed:0,total:1},questions:[{name:'Sort List',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'QuickSort / QuickSelect',progress:{completed:0,total:2},questions:[{name:'Sort Colors',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Kth Largest Element in an Array',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Binary Search',progress:{completed:0,total:6},questions:[{name:'Find First and Last Position of Element in Sorted Array',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Search in Rotated Sorted Array',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Find Peak Element',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Koko Eating Bananas',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Search a 2D Matrix',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Median of Two Sorted Arrays',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Backtracking',progress:{completed:0,total:5},questions:[{name:'Generate Parentheses',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Permutations',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Subsets',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Palindrome Partitioning',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'N-Queens',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tree Traversal - Level Order',progress:{completed:0,total:3},questions:[{name:'Binary Tree Level Order Traversal',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Binary Tree Right Side View',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Populating Next Right Pointers in Each Node II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tree Traversal - Pre Order',progress:{completed:0,total:6},questions:[{name:'Binary Tree Preorder Traversal',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Symmetric Tree',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Convert Sorted Array to Binary Search Tree',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Path Sum III',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Construct Binary Tree from Preorder and Inorder Traversal',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Serialize and Deserialize Binary Tree',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tree Traversal - In Order',progress:{completed:0,total:4},questions:[{name:'Binary Tree Inorder Traversal',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Validate Binary Search Tree',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Kth Smallest Element in a BST',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Binary Search Tree Iterator',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tree Traversal - Post Order',progress:{completed:0,total:5},questions:[{name:'Binary Tree Postorder Traversal',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Invert Binary Tree',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Diameter of Binary Tree',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Lowest Common Ancestor of a Binary Tree',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Binary Tree Maximum Path Sum',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'BST / Ordered Set',progress:{completed:0,total:3},questions:[{name:'My Calendar I',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'My Calendar II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Stock Price Fluctuation',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tries',progress:{completed:0,total:4},questions:[{name:'Implement Trie (Prefix Tree)',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Design Add and Search Words Data Structure',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Search Suggestions System',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Word Search II',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Heaps',progress:{completed:0,total:2},questions:[{name:'Furthest Building You Can Reach',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Single-Threaded CPU',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Two Heaps',progress:{completed:0,total:2},questions:[{name:'Find Median from Data Stream',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'IPO',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Top K Elements',progress:{completed:0,total:3},questions:[{name:'Kth Largest Element in a Stream',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Top K Frequent Elements',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'K Closest Points to Origin',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Intervals',progress:{completed:0,total:3},questions:[{name:'Merge Intervals',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Insert Interval',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Non-overlapping Intervals',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'K-Way Merge',progress:{completed:0,total:2},questions:[{name:'Kth Smallest Element in a Sorted Matrix',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Merge k Sorted Lists',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Data Structure Design',progress:{completed:0,total:4},questions:[{name:'Design Browser History',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'LRU Cache',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Insert Delete GetRandom O(1)',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Maximum Frequency Stack',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Greedy',progress:{completed:0,total:3},questions:[{name:'Jump Game II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Gas Station',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Task Scheduler',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Depth First Search (DFS)',progress:{completed:0,total:5},questions:[{name:'Number of Islands',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Clone Graph',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Is Graph Bipartite?',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Surrounded Regions',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Pacific Atlantic Water Flow',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Breadth First Search (BFS)',progress:{completed:0,total:3},questions:[{name:'Rotting Oranges',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'01 Matrix',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Word Ladder',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Topological Sort',progress:{completed:0,total:1},questions:[{name:'Course Schedule II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Union Find',progress:{completed:0,total:2},questions:[{name:'Number of Provinces',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Redundant Connection',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Minimum Spanning Tree',progress:{completed:0,total:1},questions:[{name:'Min Cost to Connect All Points',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Shortest Path',progress:{completed:0,total:3},questions:[{name:'Network Delay Time',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Cheapest Flights Within K Stops',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Swim in Rising Water',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'1-D DP',progress:{completed:0,total:2},questions:[{name:'Climbing Stairs',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'House Robber II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Knapsack DP',progress:{completed:0,total:2},questions:[{name:'Partition Equal Subset Sum',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Target Sum',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Unbounded Knapsack DP',progress:{completed:0,total:2},questions:[{name:'Coin Change',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Coin Change II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Longest Increasing Subsequence DP',progress:{completed:0,total:2},questions:[{name:'Longest Increasing Subsequence',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Russian Doll Envelopes',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'2D (Grid) DP',progress:{completed:0,total:4},questions:[{name:'Unique Paths II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Minimum Path Sum',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Count Square Submatrices with All Ones',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Longest Increasing Path in a Matrix',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'String DP',progress:{completed:0,total:4},questions:[{name:'Longest Common Subsequence',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Longest Palindromic Subsequence',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Decode Ways',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Word Break',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Tree / Graph DP',progress:{completed:0,total:3},questions:[{name:'House Robber III',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Unique Binary Search Trees II',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Binary Tree Cameras',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Bitmask DP',progress:{completed:0,total:2},questions:[{name:'Fair Distribution of Cookies',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Shortest Path Visiting All Nodes',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'State Machine DP',progress:{completed:0,total:1},questions:[{name:'Best Time to Buy and Sell Stock III',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]},{name:'Maths / Geometry',progress:{completed:0,total:3},questions:[{name:'Palindrome Number',difficulty:'Easy',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Reverse Integer',difficulty:'Medium',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}},{name:'Max Points on a Line',difficulty:'Hard',status:'Not Started',url:'#',solution:{github:'#',youtube:'#'}}]}];","map":{"version":3,"names":["patterns","name","progress","completed","total","questions","difficulty","status","url","solution","github","youtube"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/data/patterns.ts"],"sourcesContent":["export interface Question {\n  name: string;\n  difficulty: 'Easy' | 'Medium' | 'Hard';\n  status: 'Not Started' | 'In Progress' | 'Completed';\n  url?: string;\n  solution?: {\n    github?: string;\n    youtube?: string;\n  };\n  starred?: boolean;\n}\n\nexport interface Pattern {\n  name: string;\n  progress: {\n    completed: number;\n    total: number;\n  };\n  questions: Question[];\n}\n\nexport const patterns: Pattern[] = [\n  {\n    name: 'Arrays',\n    progress: { completed: 5, total: 5 },\n    questions: [\n      { name: 'Move Zeroes', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Majority Element', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Product of Array Except Self', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Best Time to Buy and Sell Stock II', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'First Missing Positive', difficulty: 'Hard', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Strings',\n    progress: { completed: 3, total: 3 },\n    questions: [\n      { name: 'Is Subsequence', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Valid Palindrome', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Reverse Words in a String', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Bit Manipulation',\n    progress: { completed: 3, total: 3 },\n    questions: [\n      { name: 'Single Number', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Counting Bits', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Single Number III', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Hash Tables',\n    progress: { completed: 4, total: 5 },\n    questions: [\n      { name: 'Isomorphic Strings', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Contains Duplicate II', difficulty: 'Easy', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Group Anagrams', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Encode and Decode TinyURL', difficulty: 'Medium', status: 'Completed', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Longest Consecutive Sequence', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Two Pointers',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Two Sum II - Input Array Is Sorted', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Container With Most Water', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: '3Sum', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Trapping Rain Water', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Prefix Sum',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Range Sum Query - Immutable', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Subarray Sum Equals K', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Contiguous Array', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Sliding Window - Fixed Size',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Find All Anagrams in a String', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Permutation in String', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Sliding Window - Dynamic Size',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Longest Substring Without Repeating Characters', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Minimum Window Substring', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Kadane\\'s Algorithm',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Maximum Subarray', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Maximum Product Subarray', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Matrix (2D Array)',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Spiral Matrix', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Rotate Image', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Set Matrix Zeroes', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Linked List',\n    progress: { completed: 0, total: 5 },\n    questions: [\n      { name: 'Intersection of Two Linked Lists', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Remove Nth Node From End of List', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Swap Nodes in Pairs', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Rotate List', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Add Two Numbers', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'LinkedList In-place Reversal',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Reverse Linked List', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Reverse Nodes in k-Group', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Fast and Slow Pointers',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Middle of the Linked List', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Linked List Cycle II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Stacks',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Valid Parentheses', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Min Stack', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Remove Duplicate Letters', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Longest Valid Parentheses', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Monotonic Stack',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Daily Temperatures', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Largest Rectangle in Histogram', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Monotonic Queue',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Sliding Window Maximum', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Bucket Sort',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Top K Frequent Words', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Recursion',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Merge Two Sorted Lists', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Decode String', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Divide and Conquer',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Convert Sorted List to Binary Search Tree', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Merge Sort',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Sort List', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'QuickSort / QuickSelect',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Sort Colors', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Kth Largest Element in an Array', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Binary Search',\n    progress: { completed: 0, total: 6 },\n    questions: [\n      { name: 'Find First and Last Position of Element in Sorted Array', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Search in Rotated Sorted Array', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Find Peak Element', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Koko Eating Bananas', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Search a 2D Matrix', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Median of Two Sorted Arrays', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Backtracking',\n    progress: { completed: 0, total: 5 },\n    questions: [\n      { name: 'Generate Parentheses', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Permutations', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Subsets', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Palindrome Partitioning', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'N-Queens', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tree Traversal - Level Order',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Binary Tree Level Order Traversal', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Binary Tree Right Side View', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Populating Next Right Pointers in Each Node II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tree Traversal - Pre Order',\n    progress: { completed: 0, total: 6 },\n    questions: [\n      { name: 'Binary Tree Preorder Traversal', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Symmetric Tree', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Convert Sorted Array to Binary Search Tree', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Path Sum III', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Construct Binary Tree from Preorder and Inorder Traversal', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Serialize and Deserialize Binary Tree', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tree Traversal - In Order',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Binary Tree Inorder Traversal', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Validate Binary Search Tree', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Kth Smallest Element in a BST', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Binary Search Tree Iterator', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tree Traversal - Post Order',\n    progress: { completed: 0, total: 5 },\n    questions: [\n      { name: 'Binary Tree Postorder Traversal', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Invert Binary Tree', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Diameter of Binary Tree', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Lowest Common Ancestor of a Binary Tree', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Binary Tree Maximum Path Sum', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'BST / Ordered Set',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'My Calendar I', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'My Calendar II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Stock Price Fluctuation', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tries',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Implement Trie (Prefix Tree)', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Design Add and Search Words Data Structure', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Search Suggestions System', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Word Search II', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Heaps',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Furthest Building You Can Reach', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Single-Threaded CPU', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Two Heaps',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Find Median from Data Stream', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'IPO', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Top K Elements',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Kth Largest Element in a Stream', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Top K Frequent Elements', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'K Closest Points to Origin', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Intervals',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Merge Intervals', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Insert Interval', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Non-overlapping Intervals', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'K-Way Merge',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Kth Smallest Element in a Sorted Matrix', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Merge k Sorted Lists', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Data Structure Design',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Design Browser History', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'LRU Cache', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Insert Delete GetRandom O(1)', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Maximum Frequency Stack', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Greedy',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Jump Game II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Gas Station', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Task Scheduler', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Depth First Search (DFS)',\n    progress: { completed: 0, total: 5 },\n    questions: [\n      { name: 'Number of Islands', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Clone Graph', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Is Graph Bipartite?', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Surrounded Regions', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Pacific Atlantic Water Flow', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Breadth First Search (BFS)',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Rotting Oranges', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: '01 Matrix', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Word Ladder', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Topological Sort',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Course Schedule II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Union Find',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Number of Provinces', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Redundant Connection', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Minimum Spanning Tree',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Min Cost to Connect All Points', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Shortest Path',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Network Delay Time', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Cheapest Flights Within K Stops', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Swim in Rising Water', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: '1-D DP',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Climbing Stairs', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'House Robber II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Knapsack DP',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Partition Equal Subset Sum', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Target Sum', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Unbounded Knapsack DP',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Coin Change', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Coin Change II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Longest Increasing Subsequence DP',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Longest Increasing Subsequence', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Russian Doll Envelopes', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: '2D (Grid) DP',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Unique Paths II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Minimum Path Sum', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Count Square Submatrices with All Ones', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Longest Increasing Path in a Matrix', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'String DP',\n    progress: { completed: 0, total: 4 },\n    questions: [\n      { name: 'Longest Common Subsequence', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Longest Palindromic Subsequence', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Decode Ways', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Word Break', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Tree / Graph DP',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'House Robber III', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Unique Binary Search Trees II', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Binary Tree Cameras', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Bitmask DP',\n    progress: { completed: 0, total: 2 },\n    questions: [\n      { name: 'Fair Distribution of Cookies', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Shortest Path Visiting All Nodes', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'State Machine DP',\n    progress: { completed: 0, total: 1 },\n    questions: [\n      { name: 'Best Time to Buy and Sell Stock III', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  },\n  {\n    name: 'Maths / Geometry',\n    progress: { completed: 0, total: 3 },\n    questions: [\n      { name: 'Palindrome Number', difficulty: 'Easy', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Reverse Integer', difficulty: 'Medium', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } },\n      { name: 'Max Points on a Line', difficulty: 'Hard', status: 'Not Started', url: '#', solution: { github: '#', youtube: '#' } }\n    ]\n  }\n]; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}