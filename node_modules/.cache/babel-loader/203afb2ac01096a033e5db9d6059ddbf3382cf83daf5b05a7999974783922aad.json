{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subham Kumar\\\\Desktop\\\\MyPrep\\\\dsa-patterns\\\\src\\\\components\\\\PatternCard.tsx\";\nimport React from 'react';\nimport { Card, Typography, LinearProgress, Box, IconButton, Link, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDifficultyColor = difficulty => {\n  switch (difficulty) {\n    case 'Easy':\n      return '#4caf50';\n    case 'Medium':\n      return '#ff9800';\n    case 'Hard':\n      return '#f44336';\n    default:\n      return '#757575';\n  }\n};\nconst PatternCard = ({\n  pattern,\n  isStarred,\n  onToggleStar,\n  onQuestionStatusChange,\n  onToggleStarQuestion,\n  darkMode\n}) => {\n  const completedQuestions = pattern.questions.filter(q => q.status === 'Completed').length;\n  const progress = completedQuestions / pattern.questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 3,\n    sx: {\n      bgcolor: darkMode ? '#212121' : '#ffffff',\n      borderRadius: 2,\n      boxShadow: 3,\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            fontWeight: 'bold',\n            color: darkMode ? '#ffffff' : '#333333'\n          },\n          children: pattern.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onToggleStar,\n          sx: {\n            color: isStarred ? darkMode ? '#ffd700' : '#f57c00' : darkMode ? '#bdbdbd' : '#757575',\n            '&:hover': {\n              color: darkMode ? '#ffd700' : '#f57c00'\n            }\n          },\n          children: isStarred ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: darkMode ? '#bdbdbd' : '#666666',\n          mb: 2\n        },\n        children: pattern.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: darkMode ? '#bdbdbd' : '#666666'\n          },\n          children: [\"Progress: \", completedQuestions, \"/\", pattern.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: darkMode ? '#bdbdbd' : '#666666'\n          },\n          children: [\"(\", Math.round(progress), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        sx: {\n          height: 8,\n          borderRadius: 4,\n          bgcolor: darkMode ? '#424242' : '#e0e0e0',\n          '& .MuiLinearProgress-bar': {\n            bgcolor: '#4caf50',\n            borderRadius: 4\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold'\n              },\n              children: \"Problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold'\n              },\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold'\n              },\n              children: \"Solution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: darkMode ? '#e0e0e0' : '#333333',\n                fontWeight: 'bold'\n              },\n              children: \"Star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pattern.questions.map(question => {\n            var _question$solution, _question$solution2;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(motion.div, {\n                  whileHover: {\n                    scale: 1.1\n                  },\n                  whileTap: {\n                    scale: 0.9\n                  },\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => onQuestionStatusChange(pattern.name, question.name, question.status === 'Completed' ? 'Not Started' : 'Completed'),\n                    sx: {\n                      color: question.status === 'Completed' ? '#4caf50' : darkMode ? '#bdbdbd' : '#757575',\n                      '&:hover': {\n                        color: '#4caf50'\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AssignmentTurnedInOutlinedIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: question.url || '#',\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  sx: {\n                    color: darkMode ? '#90caf9' : '#0288d1',\n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: 'inherit'\n                    },\n                    children: question.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: question.difficulty,\n                  size: \"small\",\n                  sx: {\n                    bgcolor: getDifficultyColor(question.difficulty),\n                    color: '#ffffff',\n                    fontWeight: 'bold',\n                    height: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    href: ((_question$solution = question.solution) === null || _question$solution === void 0 ? void 0 : _question$solution.github) || '#' // Use dummy link or actual if exists\n                    ,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\"\n                    // Remove conditional display for now to ensure visibility\n                    ,\n                    sx: {\n                      color: darkMode ? '#bdbdbd' : '#666666',\n                      display: 'flex',\n                      // Ensure flex display for alignment\n                      alignItems: 'center',\n                      '&:hover': {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(GitHubIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this), ((_question$solution2 = question.solution) === null || _question$solution2 === void 0 ? void 0 : _question$solution2.youtube) && /*#__PURE__*/_jsxDEV(Link, {\n                    href: question.solution.youtube || '#',\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    sx: {\n                      color: darkMode ? '#bdbdbd' : '#666666',\n                      display: 'flex',\n                      alignItems: 'center',\n                      '&:hover': {\n                        color: darkMode ? '#ffffff' : '#333333'\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(YouTubeIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => onToggleStarQuestion(pattern.name, question.name),\n                  sx: {\n                    color: question.starred ? darkMode ? '#ffd700' : '#f57c00' : darkMode ? '#bdbdbd' : '#757575',\n                    '&:hover': {\n                      color: darkMode ? '#ffd700' : '#f57c00'\n                    }\n                  },\n                  children: question.starred ? /*#__PURE__*/_jsxDEV(StarIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 43\n                  }, this) : /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 75\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, question.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = PatternCard;\nexport default PatternCard;\nvar _c;\n$RefreshReg$(_c, \"PatternCard\");","map":{"version":3,"names":["React","Card","Typography","LinearProgress","Box","IconButton","Link","Chip","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","StarIcon","StarBorderIcon","AssignmentTurnedInOutlinedIcon","GitHubIcon","YouTubeIcon","motion","jsxDEV","_jsxDEV","getDifficultyColor","difficulty","PatternCard","pattern","isStarred","onToggleStar","onQuestionStatusChange","onToggleStarQuestion","darkMode","completedQuestions","questions","filter","q","status","length","progress","elevation","sx","bgcolor","borderRadius","boxShadow","overflow","children","p","borderBottom","display","justifyContent","alignItems","mb","variant","component","fontWeight","color","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","gap","Math","round","value","height","size","map","question","_question$solution","_question$solution2","div","whileHover","scale","whileTap","fontSize","href","url","target","rel","textDecoration","label","solution","github","youtube","starred","_c","$RefreshReg$"],"sources":["C:/Users/Subham Kumar/Desktop/MyPrep/dsa-patterns/src/components/PatternCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, Typography, LinearProgress, Box, IconButton, Link, List, ListItem, ListItemText, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { Pattern, Question } from '../data/patterns';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport AssignmentTurnedInOutlinedIcon from '@mui/icons-material/AssignmentTurnedInOutlined';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface PatternCardProps {\r\n  pattern: Pattern;\r\n  isStarred: boolean;\r\n  onToggleStar: () => void;\r\n  onQuestionStatusChange: (patternName: string, questionName: string, newStatus: Question['status']) => void;\r\n  onToggleStarQuestion: (patternName: string, questionName: string) => void;\r\n  darkMode: boolean;\r\n}\r\n\r\nconst getDifficultyColor = (difficulty: string) => {\r\n  switch (difficulty) {\r\n    case 'Easy': return '#4caf50';\r\n    case 'Medium': return '#ff9800';\r\n    case 'Hard': return '#f44336';\r\n    default: return '#757575';\r\n  }\r\n};\r\n\r\nconst PatternCard: React.FC<PatternCardProps> = ({\r\n  pattern,\r\n  isStarred,\r\n  onToggleStar,\r\n  onQuestionStatusChange,\r\n  onToggleStarQuestion,\r\n  darkMode\r\n}) => {\r\n  const completedQuestions = pattern.questions.filter(q => q.status === 'Completed').length;\r\n  const progress = (completedQuestions / pattern.questions.length) * 100;\r\n\r\n  return (\r\n    <Card\r\n      elevation={3}\r\n      sx={{\r\n        bgcolor: darkMode ? '#212121' : '#ffffff',\r\n        borderRadius: 2,\r\n        boxShadow: 3,\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <Box sx={{ p: 2, borderBottom: `1px solid ${darkMode ? '#424242' : '#e0e0e0'}` }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 'bold', color: darkMode ? '#ffffff' : '#333333' }}>\r\n            {pattern.name}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={onToggleStar}\r\n            sx={{ \r\n              color: isStarred ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\r\n              '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\r\n            }}\r\n          >\r\n            {isStarred ? <StarIcon /> : <StarBorderIcon />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666', mb: 2 }}>\r\n          {pattern.name}\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n          <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\r\n            Progress: {completedQuestions}/{pattern.questions.length}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: darkMode ? '#bdbdbd' : '#666666' }}>\r\n            ({Math.round(progress)}%)\r\n          </Typography>\r\n        </Box>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          sx={{\r\n            height: 8,\r\n            borderRadius: 4,\r\n            bgcolor: darkMode ? '#424242' : '#e0e0e0',\r\n            '& .MuiLinearProgress-bar': {\r\n              bgcolor: '#4caf50',\r\n              borderRadius: 4\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n      <TableContainer>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow sx={{ bgcolor: darkMode ? '#1a1a1a' : '#f5f5f5' }}>\r\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold' }}>Status</TableCell>\r\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold' }}>Problem</TableCell>\r\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold' }}>Difficulty</TableCell>\r\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold' }}>Solution</TableCell>\r\n              <TableCell sx={{ color: darkMode ? '#e0e0e0' : '#333333', fontWeight: 'bold' }}>Star</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {pattern.questions.map((question) => (\r\n              <TableRow key={question.name}>\r\n                <TableCell>\r\n                  <motion.div\r\n                    whileHover={{ scale: 1.1 }}\r\n                    whileTap={{ scale: 0.9 }}\r\n                  >\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => onQuestionStatusChange(pattern.name, question.name, \r\n                        question.status === 'Completed' ? 'Not Started' : 'Completed'\r\n                      )}\r\n                      sx={{\r\n                        color: question.status === 'Completed' ? '#4caf50' : (darkMode ? '#bdbdbd' : '#757575'),\r\n                        '&:hover': { color: '#4caf50' }\r\n                      }}\r\n                    >\r\n                      <AssignmentTurnedInOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </motion.div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Link\r\n                    href={question.url || '#'}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    sx={{ color: darkMode ? '#90caf9' : '#0288d1', textDecoration: 'none', '&:hover': { textDecoration: 'underline' } }}\r\n                  >\r\n                    <Typography variant=\"body2\" sx={{ color: 'inherit' }}>\r\n                      {question.name}\r\n                    </Typography>\r\n                    {/* Optional: Add LaunchIcon next to problem name if needed */}\r\n                    {/* <LaunchIcon sx={{ fontSize: '0.8em', ml: 0.5 }} /> */}\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={question.difficulty}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      bgcolor: getDifficultyColor(question.difficulty),\r\n                      color: '#ffffff',\r\n                      fontWeight: 'bold',\r\n                      height: '20px'\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    {/* GitHub Icon Link */}\r\n                    <Link\r\n                      href={question.solution?.github || '#'} // Use dummy link or actual if exists\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      // Remove conditional display for now to ensure visibility\r\n                      sx={{\r\n                        color: darkMode ? '#bdbdbd' : '#666666',\r\n                        display: 'flex', // Ensure flex display for alignment\r\n                        alignItems: 'center',\r\n                        '&:hover': { color: darkMode ? '#ffffff' : '#333333' }\r\n                      }}\r\n                    >\r\n                      <GitHubIcon fontSize=\"small\" />\r\n                    </Link>\r\n\r\n                    {/* YouTube Icon Link (optional, based on your data) */}\r\n                    {question.solution?.youtube && (\r\n                       <Link\r\n                        href={question.solution.youtube || '#'}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        sx={{\r\n                          color: darkMode ? '#bdbdbd' : '#666666',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          '&:hover': { color: darkMode ? '#ffffff' : '#333333' }\r\n                        }}\r\n                      >\r\n                        <YouTubeIcon fontSize=\"small\" />\r\n                      </Link>\r\n                    )}\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell>\r\n                   <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => onToggleStarQuestion(pattern.name, question.name)}\r\n                      sx={{\r\n                        color: question.starred ? (darkMode ? '#ffd700' : '#f57c00') : (darkMode ? '#bdbdbd' : '#757575'),\r\n                        '&:hover': { color: darkMode ? '#ffd700' : '#f57c00' }\r\n                      }}\r\n                    >\r\n                      {question.starred ? <StarIcon fontSize=\"small\" /> : <StarBorderIcon fontSize=\"small\" />}\r\n                    </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PatternCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}