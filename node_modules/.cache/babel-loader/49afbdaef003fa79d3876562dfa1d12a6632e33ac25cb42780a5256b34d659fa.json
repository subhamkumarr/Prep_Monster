{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _elementTypeAcceptingRef = _interopRequireDefault(require(\"@mui/utils/elementTypeAcceptingRef\"));\nvar _NoSsr = _interopRequireDefault(require(\"../NoSsr\"));\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\nvar _zeroStyled = require(\"../zero-styled\");\nvar _DefaultPropsProvider = require(\"../DefaultPropsProvider\");\nvar _utils = require(\"../transitions/utils\");\nvar _utils2 = require(\"../utils\");\nvar _useSlot = _interopRequireDefault(require(\"../utils/useSlot\"));\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nfunction reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _DefaultPropsProvider.useDefaultProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _zeroStyled.useTheme)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    allowSwipeInChildren = false,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps,\n      ...ModalPropsProp\n    } = {},\n    onClose,\n    onOpen,\n    open = false,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary',\n    // Mobile first.\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = (0, _useForkRef.default)(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].includes(anchorRtl) ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- claimedSwipeInstance is a singleton\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = (force = false) => {\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (!open) {\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || paperRef.current?.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  const [SwipeAreaSlot, swipeAreaSlotProps] = (0, _useSlot.default)('swipeArea', {\n    ref: swipeAreaRef,\n    elementType: _SwipeArea.default,\n    ownerState: props,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        swipeArea: SwipeAreaProps,\n        ...slotProps\n      }\n    },\n    additionalProps: {\n      width: swipeAreaWidth,\n      anchor\n    }\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, {\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: {\n        BackdropProps: {\n          ...BackdropProps,\n          ref: backdropRef\n        },\n        // Ensures that paperRef.current will be defined inside the touch start event handler\n        // See https://github.com/mui/material-ui/issues/30414 for more information\n        ...(variant === 'temporary' && {\n          keepMounted: true\n        }),\n        ...ModalPropsProp\n      },\n      hideBackdrop: hideBackdrop,\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref,\n      slots: slots,\n      slotProps: {\n        ...slotProps,\n        backdrop: (0, _utils2.mergeSlotProps)(slotProps.backdrop ?? BackdropProps, {\n          ref: backdropRef\n        }),\n        paper: (0, _utils2.mergeSlotProps)(slotProps.paper ?? PaperProps, {\n          style: {\n            pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n          },\n          ref: handleRef\n        })\n      },\n      ...other\n    }), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_NoSsr.default, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(SwipeAreaSlot, {\n        ...swipeAreaSlotProps\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _elementTypeAcceptingRef.default\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    component: _elementTypeAcceptingRef.default,\n    style: _propTypes.default.object\n  }),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: _propTypes.default.shape({\n    backdrop: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    docked: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    paper: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    root: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    swipeArea: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    transition: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: _propTypes.default.shape({\n    backdrop: _propTypes.default.elementType,\n    docked: _propTypes.default.elementType,\n    paper: _propTypes.default.elementType,\n    root: _propTypes.default.elementType,\n    swipeArea: _propTypes.default.elementType,\n    transition: _propTypes.default.elementType\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   * @deprecated use the `slotProps.swipeArea` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = exports.default = SwipeableDrawer;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","reset","React","ReactDOM","_propTypes","_elementTypeAcceptingRef","_NoSsr","_Drawer","_useForkRef","_ownerDocument","_ownerWindow","_useEventCallback","_useEnhancedEffect","_zeroStyled","_DefaultPropsProvider","_utils","_utils2","_useSlot","_SwipeArea","_jsxRuntime","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","useDefaultProps","name","theme","useTheme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","allowSwipeInChildren","minFlingVelocity","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","slots","slotProps","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","includes","isHorizontal","transform","drawerStyle","webkitTransform","transition","create","getTransitionProps","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","flushSync","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","startMaybeSwiping","force","lastTime","lastTranslate","paperHit","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","SwipeAreaSlot","swipeAreaSlotProps","elementType","ownerState","externalForwardedProps","swipeArea","additionalProps","width","jsxs","Fragment","children","jsx","keepMounted","backdrop","mergeSlotProps","paper","pointerEvents","process","env","NODE_ENV","propTypes","oneOfType","func","bool","oneOf","node","number","component","isRequired","object","docked","root","appear","_default"],"sources":["C:/Users/Subham Kumar/Desktop/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _elementTypeAcceptingRef = _interopRequireDefault(require(\"@mui/utils/elementTypeAcceptingRef\"));\nvar _NoSsr = _interopRequireDefault(require(\"../NoSsr\"));\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\nvar _zeroStyled = require(\"../zero-styled\");\nvar _DefaultPropsProvider = require(\"../DefaultPropsProvider\");\nvar _utils = require(\"../transitions/utils\");\nvar _utils2 = require(\"../utils\");\nvar _useSlot = _interopRequireDefault(require(\"../utils/useSlot\"));\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nfunction reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _DefaultPropsProvider.useDefaultProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _zeroStyled.useTheme)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    allowSwipeInChildren = false,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps,\n      ...ModalPropsProp\n    } = {},\n    onClose,\n    onOpen,\n    open = false,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary',\n    // Mobile first.\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = (0, _useForkRef.default)(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].includes(anchorRtl) ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- claimedSwipeInstance is a singleton\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = (force = false) => {\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (!open) {\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || paperRef.current?.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  const [SwipeAreaSlot, swipeAreaSlotProps] = (0, _useSlot.default)('swipeArea', {\n    ref: swipeAreaRef,\n    elementType: _SwipeArea.default,\n    ownerState: props,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        swipeArea: SwipeAreaProps,\n        ...slotProps\n      }\n    },\n    additionalProps: {\n      width: swipeAreaWidth,\n      anchor\n    }\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, {\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: {\n        BackdropProps: {\n          ...BackdropProps,\n          ref: backdropRef\n        },\n        // Ensures that paperRef.current will be defined inside the touch start event handler\n        // See https://github.com/mui/material-ui/issues/30414 for more information\n        ...(variant === 'temporary' && {\n          keepMounted: true\n        }),\n        ...ModalPropsProp\n      },\n      hideBackdrop: hideBackdrop,\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref,\n      slots: slots,\n      slotProps: {\n        ...slotProps,\n        backdrop: (0, _utils2.mergeSlotProps)(slotProps.backdrop ?? BackdropProps, {\n          ref: backdropRef\n        }),\n        paper: (0, _utils2.mergeSlotProps)(slotProps.paper ?? PaperProps, {\n          style: {\n            pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n          },\n          ref: handleRef\n        })\n      },\n      ...other\n    }), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_NoSsr.default, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(SwipeAreaSlot, {\n        ...swipeAreaSlotProps\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _elementTypeAcceptingRef.default\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    component: _elementTypeAcceptingRef.default,\n    style: _propTypes.default.object\n  }),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: _propTypes.default.shape({\n    backdrop: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    docked: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    paper: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    root: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    swipeArea: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n    transition: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: _propTypes.default.shape({\n    backdrop: _propTypes.default.elementType,\n    docked: _propTypes.default.elementType,\n    paper: _propTypes.default.elementType,\n    root: _propTypes.default.elementType,\n    swipeArea: _propTypes.default.elementType,\n    transition: _propTypes.default.elementType\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   * @deprecated use the `slotProps.swipeArea` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = exports.default = SwipeableDrawer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}