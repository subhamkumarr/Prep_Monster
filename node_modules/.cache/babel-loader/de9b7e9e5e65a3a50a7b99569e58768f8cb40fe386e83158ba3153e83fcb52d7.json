{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isDynamicRoute\", {\n  enumerable: true,\n  get: function () {\n    return isDynamicRoute;\n  }\n});\nconst _interceptionroutes = require(\"./interception-routes\");\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/;\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/;\nfunction isDynamicRoute(route, strict) {\n  if (strict === void 0) strict = true;\n  if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {\n    route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;\n  }\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route);\n  }\n  return TEST_ROUTE.test(route);\n}","map":{"version":3,"names":["isDynamicRoute","TEST_ROUTE","TEST_STRICT_ROUTE","route","strict","_interceptionroutes","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","test"],"sources":["C:\\Users\\Subham Kumar\\Desktop\\node_modules\\next\\src\\shared\\lib\\router\\utils\\is-dynamic.ts"],"sourcesContent":["import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n"],"mappings":";;;;;+BAkBgB;;;WAAAA,cAAA;;;oCAfT;AAEP;AACA,MAAMC,UAAA,GAAa;AAEnB;AACA,MAAMC,iBAAA,GAAoB;AASnB,SAASF,eAAeG,KAAa,EAAEC,MAAsB;EAAtB,IAAAA,MAAA,aAAAA,MAAA,GAAkB;EAC9D,IAAI,IAAAC,mBAAA,CAAAC,0BAA0B,EAACH,KAAA,GAAQ;IACrCA,KAAA,GAAQ,IAAAE,mBAAA,CAAAE,mCAAmC,EAACJ,KAAA,EAAOK,gBAAgB;EACrE;EAEA,IAAIJ,MAAA,EAAQ;IACV,OAAOF,iBAAA,CAAkBO,IAAI,CAACN,KAAA;EAChC;EAEA,OAAOF,UAAA,CAAWQ,IAAI,CAACN,KAAA;AACzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}